<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  	<parent>
		<!-- 父模块的相对路径， 父模块目录 中要有pom.xml -->
		<relativePath>../atparent</relativePath>
		<groupId>activetech</groupId>
		<artifactId>atparent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
  <!-- <groupId>yycg</groupId> 继承父节点以后，需要注释-->
  <artifactId>atproject_zjyy</artifactId>
  <!-- <version>0.0.1-SNAPSHOT</version> 继承父节点以后，需要注释-->
  
  <packaging>war</packaging>
  <name>atproject_zjyy</name>
  <url>http://maven.apache.org</url>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <dependencies>
    <!-- 依赖技术架构模块 -->
    <dependency>
		<groupId>activetech</groupId>
		<artifactId>atspringmybatis</artifactId>
		<version>0.0.1-SNAPSHOT</version>
    </dependency>
    
    <!-- hl7工具类-->
    <dependency>
		<groupId>activetech</groupId>
		<artifactId>atHl7Utils26</artifactId>
		<version>0.0.1-SNAPSHOT</version>
    </dependency> 
    
     <!-- 工具类-->
    <dependency>
		<groupId>activetech</groupId>
		<artifactId>atutil</artifactId>
		<version>0.0.1-SNAPSHOT</version>
    </dependency> 
  
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
     <!-- dbcp -->
	<dependency>
		<groupId>commons-dbcp</groupId>
		<artifactId>commons-dbcp</artifactId>
		<version>1.2.2</version>
	</dependency>
	<!-- ojdbc14 -->
	<dependency>
		<groupId>com.oracle</groupId>
		<artifactId>ojdbc14</artifactId>
		<version>10.2.0.1.0</version>
		<scope>runtime</scope>
	</dependency>
   
    <!-- servlet-api 编译时用 -->
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>servlet-api</artifactId>
		<version>2.5</version>
		<scope>provided</scope> 
	</dependency>
	<!-- jstl标签 --> 
	<dependency>
		<groupId>jstl</groupId>
		<artifactId>jstl</artifactId>
		<version>1.2</version>
	</dependency>
	<dependency>
		<groupId>taglibs</groupId>
		<artifactId>standard</artifactId>
		<version>1.1.2</version>
	</dependency>
	<!-- 文件上传 -->
	<dependency>
		<groupId>commons-fileupload</groupId>
		<artifactId>commons-fileupload</artifactId>
		<version>1.2.2</version>
	</dependency>
	<!-- commons io -->
	<dependency>
		<groupId>commons-io</groupId> 
		<artifactId>commons-io</artifactId>
		<version>2.4</version> 
	</dependency> 
	<!-- json转换 ,springmvc 返回json格式必须加入-->
	<dependency>
		<groupId>org.codehaus.jackson</groupId>
		<artifactId>jackson-mapper-asl</artifactId>
		<version>1.9.11</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/com.lowagie/itext -->
	<dependency>
	    <groupId>com.lowagie</groupId>
	    <artifactId>itext</artifactId>
	    <version>2.1.7</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/com.microsoft/sqljdbc4 -->
	<dependency>
	    <groupId>com.microsoft</groupId>
	    <artifactId>sqljdbc4</artifactId>
	    <version>3.0</version>
	</dependency>
	
	<dependency>
		<groupId>net.sf.json-lib</groupId>
		<artifactId>json-lib</artifactId>
		<version>2.4</version>
		<classifier>jdk15</classifier>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/org.apache.cxf/cxf-rt-frontend-jaxws -->
	<dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-frontend-jaxws</artifactId>
		<version>3.2.4</version>
	</dependency>

	<!-- https://mvnrepository.com/artifact/org.apache.cxf/cxf-rt-transports-http -->
	<dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-transports-http</artifactId>
		<version>3.2.4</version>
	</dependency>
	
  </dependencies>
  
	<build>
		<finalName>atproject_edpc</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.7</version>
                <!-- <configuration>
                    <skip>true</skip>
                </configuration> -->
            </plugin>
			
			<!-- war包生成插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<warSourceDirectory>src/main/webapp</warSourceDirectory>
				</configuration>
			</plugin>
			
			<!-- <plugin>
                proguard混淆插件
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.0.14</version>
                <executions>
                    <execution>
                        打包的时候开始混淆
                        <phase>package</phase>
                        <goals><goal>proguard</goal></goals>
                    </execution>
                </executions>
                <configuration>
                    <proguardVersion>6.1.1</proguardVersion>
                    <injar>atproject_zjyy.war</injar>
                    输出的jar
                    <outjar>atproject_zjyy.war</outjar>
                    是否混淆
                    <obfuscate>true</obfuscate>
                    <options>
                        <option>-target 1.8</option> 指定java版本号
                        <option>-dontshrink</option> 默认开启，不做收缩（删除注释、未被引用代码）
                        <option>-dontoptimize</option>默认是开启的，这里关闭字节码级别的优化
                        <option>-adaptclassstrings</option>混淆类名之后，对使用Class.forName('className')之类的地方进行相应替代
                        <option>-ignorewarnings</option>忽略warn消息,如果提示org.apache.http.* 这个包里的类有问题，那么就加入下述代码：-keep class org.apache.http.** { *; }    -dontwarn org.apache.http.**
                        <option>-keep class org.apache.http.** { *; }</option>
                        <option>-dontwarn org.apache.http.**</option>
                        <option>-keep class org.apache.logging.log4j.util.* { *; }</option>
                        <option>-dontwarn org.apache.logging.log4j.util.**</option>
                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod</option>对异常、注解信息在runtime予以保留，不然影响springboot启动
                        不混淆所有interface接口
                        <option>-keepnames interface **</option>
                        <option>-keepclassmembers enum * { *; }</option>保留枚举成员及方法
                        <option>-keepparameternames</option>
                        <option>-keepclasseswithmembers public class * {
                            public static void main(java.lang.String[]);}</option> 保留main方法的类及其方法名
                        忽略note消息，如果提示javax.annotation有问题，那麽就加入以下代码
                        <option>-dontnote javax.annotation.**</option>
                        <option>-dontnote sun.applet.**</option>
                        <option>-dontnote sun.tools.jar.**</option>
                        <option>-dontnote org.apache.commons.logging.**</option>
                        <option>-dontnote javax.inject.**</option>
                        <option>-dontnote org.aopalliance.intercept.**</option>
                        <option>-dontnote org.aopalliance.aop.**</option>
                        <option>-dontnote org.apache.logging.log4j.**</option>
                        <option>-dontnote module-info</option>
                        <option>-keep interface * extends * { *; }</option>
                        不混淆所有类,保存原始定义的注释
                        <option>-keepclassmembers class * {
                            @org.springframework.beans.factory.annotation.Autowired *;
                            @org.springframework.beans.factory.annotation.Value *;
                            }
                        </option>
                    </options>
                    <libs>
                        添加依赖 java8
                        <lib>C:\Program Files\Java\jdk1.8.0_101\jre\lib\rt.jar</lib>
                        <lib>C:\Program Files\Java\jdk1.8.0_101\jre\lib\jce.jar</lib>
                    </libs>
                </configuration>
                <dependencies>
                    https://mvnrepository.com/artifact/net.sf.proguard/proguard-base
					<dependency>
					    <groupId>net.sf.proguard</groupId>
					    <artifactId>proguard-base</artifactId>
					    <version>6.1.1</version>
					</dependency>
                </dependencies>
            </plugin> -->
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.4.0</version>
				<configuration>
					<configurationFile>src/main/resources/generatorConfig.xml</configurationFile>
					<verbose>true</verbose>
					<overwrite>true</overwrite>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
