<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="activetech.hospital.dao.mapper.HspHealtheduInfCustomMapper" >
  <resultMap id="BaseResultMap" type="activetech.hospital.pojo.dto.HspHealtheduInfCustom" >
    <id column="EDU_SEQ" property="eduSeq" jdbcType="VARCHAR" />
    <result column="EMG_SEQ" property="emgSeq" jdbcType="VARCHAR" />
    <result column="EDU_OBJ" property="eduObj" jdbcType="VARCHAR" />
    <result column="EDU_TIME" property="eduTime" jdbcType="CHAR" />
    <result column="EDU_CONT" property="eduCont" jdbcType="VARCHAR" />
    <result column="EDU_METHOD" property="eduMethod" jdbcType="VARCHAR" />
    <result column="EDU_DAT" property="eduDat" jdbcType="TIMESTAMP" />
    <result column="EDU_RES" property="eduRes" jdbcType="CHAR" />
    <result column="EDU_OTHER" property="eduOther" jdbcType="VARCHAR" />
    <result column="EDU_ITEM" property="eduItem" jdbcType="VARCHAR" />
    <result column="CRAT_DAT" property="cratDat" jdbcType="TIMESTAMP" />
    <result column="CRAT_NBR" property="cratNbr" jdbcType="VARCHAR" />
    <result column="UPDT_DAT" property="updtDat" jdbcType="TIMESTAMP" />
    <result column="UPDT_NBR" property="updtNbr" jdbcType="VARCHAR" />
    <result column="eduDatStr" property="eduDatStr" jdbcType="VARCHAR" />
    <result column="eduObjStr" property="eduObjStr" jdbcType="VARCHAR" />
    <result column="eduMethodStr" property="eduMethodStr" jdbcType="VARCHAR" />
    <result column="eduContStr" property="eduContStr" jdbcType="VARCHAR" />
    <result column="eduTimeStr" property="eduTimeStr" jdbcType="VARCHAR" />
    <result column="eduResStr" property="eduResStr" jdbcType="VARCHAR" />
    <result column="eduItemStr" property="eduItemStr" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    EDU_SEQ, EMG_SEQ, EDU_OBJ, EDU_TIME, EDU_CONT, EDU_METHOD, EDU_DAT, EDU_RES, EDU_OTHER, 
    EDU_ITEM, CRAT_DAT, CRAT_NBR, UPDT_DAT, UPDT_NBR
  </sql>
  <sql id="Base_Where_List" >
  	<if test="hspHealtheduInfCustom!=null">
  		<if test="hspHealtheduInfCustom.emgSeq!=null and hspHealtheduInfCustom.emgSeq!=''">
  			and emg_seq=#{hspHealtheduInfCustom.emgSeq} 
  		</if>
  		<if test="startdate!=null and startdate!=''">
  			and to_char(EDU_DAT,'yyyy/mm/dd')<![CDATA[>=]]>#{startdate}
  		</if>
  		<if test="enddate!=null and enddate!=''">
  			and to_char(EDU_DAT,'yyyy/mm/dd')<![CDATA[<=]]>#{enddate}
  		</if>
  	</if>
  </sql>
  <sql id="eduObj_Str_Table" >
  	(select EDU_SEQ, wm_concat(EDU_OBJ) EDU_OBJ,wm_concat(eduObjStr) eduObjStr
	from (select EDU_SEQ,a1.EDU_OBJ,b1.info eduObjStr
		  from (select EDU_SEQ,regexp_substr(EDU_OBJ,'[^,]+',1,level) EDU_OBJ
				from (select EDU_SEQ,EDU_OBJ from HSP_HEALTHEDU_INF  
				<where>
   					<include refid="Base_Where_List"/>
   				</where>)
				 connect by level <![CDATA[<=]]>( (LENGTH(EDU_OBJ) - LENGTH(REPLACE(EDU_OBJ, ',', NULL)) ) / LENGTH(',') +1) 
				 and prior EDU_SEQ=EDU_SEQ
				 and prior sys_guid() is not null) a1,
				 (select info,infocode from DSTDICTINFO where typecode='EDUCATE_OBJ_COD') b1
	where  a1.EDU_OBJ=b1.infocode)group by EDU_SEQ)
  </sql>
  <sql id="eduMethod_Str_Table" >
  	(select EDU_SEQ, wm_concat(EDU_METHOD) EDU_METHOD,wm_concat(eduMethodStr) eduMethodStr
	from (select EDU_SEQ,a2.EDU_METHOD,b2.info eduMethodStr
		  from (select EDU_SEQ,regexp_substr(EDU_METHOD,'[^,]+',1,level) EDU_METHOD
				from (select EDU_SEQ,EDU_METHOD from HSP_HEALTHEDU_INF  
				<where>
   					<include refid="Base_Where_List"/>
   				</where>)
				 connect by level <![CDATA[<=]]>( (LENGTH(EDU_METHOD) - LENGTH(REPLACE(EDU_METHOD, ',', NULL)) ) / LENGTH(',') +1) 
				 and prior EDU_SEQ=EDU_SEQ
				 and prior sys_guid() is not null) a2,
				 (select info,infocode from DSTDICTINFO where typecode='EDUCATE_METHOD_COD') b2
	where  a2.EDU_METHOD=b2.infocode)group by EDU_SEQ)
  </sql>
  <sql id="eduCont_Str_Table" >
  	(select EDU_SEQ, wm_concat(EDU_CONT) EDU_CONT,wm_concat(eduContStr) eduContStr
	from (select EDU_SEQ,a3.EDU_CONT,b3.info eduContStr
		  from (select EDU_SEQ,regexp_substr(EDU_CONT,'[^,]+',1,level) EDU_CONT
				from (select EDU_SEQ,EDU_CONT from HSP_HEALTHEDU_INF  
				<where>
   					<include refid="Base_Where_List"/>
   				</where>)
				 connect by level <![CDATA[<=]]>( (LENGTH(EDU_CONT) - LENGTH(REPLACE(EDU_CONT, ',', NULL)) ) / LENGTH(',') +1) 
				 and prior EDU_SEQ=EDU_SEQ
				 and prior sys_guid() is not null) a3,
				 (select info,infocode from DSTDICTINFO where typecode='EDUCATE_CONT_COD') b3
	where  a3.EDU_CONT=b3.infocode)group by EDU_SEQ)
  </sql>
  <select id="findHealtheduListByEmgSeq" resultMap="BaseResultMap" parameterType="activetech.hospital.pojo.dto.HspHealtheduInfQueryDto" >
    select
     p.EDU_SEQ, EMG_SEQ, p.EDU_OBJ, p.EDU_TIME, p.EDU_CONT, p.EDU_METHOD, EDU_DAT, EDU_RES, EDU_OTHER, p.edu_item,
    (select item_nam from HSP_HEALTHEDU_ITEM where HSP_HEALTHEDU_ITEM.itemno=item.parentno) ||'：'|| item.ITEM_NAM eduItemStr,
    to_char(EDU_DAT,'yyyy/mm/dd hh24:mi')eduDatStr,t2.eduMethodStr,t1.eduObjStr,t3.eduContStr,
    (select info from DSTDICTINFO where infocode=p.EDU_TIME and typecode='EDUCATE_TIME_COD') eduTimeStr,
    (select info from DSTDICTINFO where infocode=p.EDU_RES and typecode='EDUCATE_RESULT_COD') eduResStr
    from HSP_HEALTHEDU_INF p,HSP_HEALTHEDU_ITEM item,
    <include refid="eduObj_Str_Table"/> t1,
    <include refid="eduMethod_Str_Table"/>t2,
    <include refid="eduCont_Str_Table"/>t3
   where
    item.ITEMNO=p.EDU_ITEM
    and p.edu_seq=t1.edu_seq(+) 
    and p.edu_seq=t2.edu_seq(+) 
    and p.edu_seq=t3.edu_seq(+)
    <include refid="Base_Where_List"/>
    order by ${sort} ${order}
  </select>
  <!-- 获取当天抢救室病人列表 -->
  <select id="findEmgListInQjs" resultType="activetech.hospital.pojo.dto.HspemginfCustom" parameterType="activetech.hospital.pojo.dto.HspHealtheduInfQueryDto">
    select
    emg_seq emgSeq,cst_nam cstNam,EMG_DEP_COD emgDepCod
    from HSP_emg_INF
    where 
    emg_seq=#{hspHealtheduInfCustom.emgSeq} or
    ((CST_DSP_COD ='6') and 
    to_char(EMG_DAT,'yyyy/mm/dd')<![CDATA[>=]]>#{startdate} and
    to_char(EMG_DAT,'yyyy/mm/dd')<![CDATA[<=]]>#{enddate})
    order by emg_dat desc
  </select>
  
</mapper>