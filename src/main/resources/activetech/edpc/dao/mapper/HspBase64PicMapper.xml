<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="activetech.edpc.dao.mapper.HspBase64PicMapper" >
  <resultMap id="BaseResultMap" type="activetech.edpc.pojo.domain.HspBase64Pic" >
    <id column="EMG_SEQ" property="emgSeq" jdbcType="VARCHAR" />
    <id column="PIC_TYPE" property="picType" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="activetech.edpc.pojo.domain.HspBase64Pic" extends="BaseResultMap" >
    <result column="DATA" property="data" jdbcType="CLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    EMG_SEQ, PIC_TYPE
  </sql>
  <sql id="Blob_Column_List" >
    DATA
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="activetech.edpc.pojo.domain.HspBase64PicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from HSP_BASE64_PIC
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="activetech.edpc.pojo.domain.HspBase64PicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from HSP_BASE64_PIC
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="activetech.edpc.pojo.domain.HspBase64PicKey" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from HSP_BASE64_PIC
    where EMG_SEQ = #{emgSeq,jdbcType=VARCHAR}
      and PIC_TYPE = #{picType,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="activetech.edpc.pojo.domain.HspBase64PicKey" >
    delete from HSP_BASE64_PIC
    where EMG_SEQ = #{emgSeq,jdbcType=VARCHAR}
      and PIC_TYPE = #{picType,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="activetech.edpc.pojo.domain.HspBase64PicExample" >
    delete from HSP_BASE64_PIC
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="activetech.edpc.pojo.domain.HspBase64Pic" >
    insert into HSP_BASE64_PIC (EMG_SEQ, PIC_TYPE, DATA
      )
    values (#{emgSeq,jdbcType=VARCHAR}, #{picType,jdbcType=VARCHAR}, #{data,jdbcType=CLOB}
      )
  </insert>
  <insert id="insertSelective" parameterType="activetech.edpc.pojo.domain.HspBase64Pic" >
    insert into HSP_BASE64_PIC
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="emgSeq != null" >
        EMG_SEQ,
      </if>
      <if test="picType != null" >
        PIC_TYPE,
      </if>
      <if test="data != null" >
        DATA,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="emgSeq != null" >
        #{emgSeq,jdbcType=VARCHAR},
      </if>
      <if test="picType != null" >
        #{picType,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        #{data,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="activetech.edpc.pojo.domain.HspBase64PicExample" resultType="java.lang.Integer" >
    select count(*) from HSP_BASE64_PIC
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update HSP_BASE64_PIC
    <set >
      <if test="record.emgSeq != null" >
        EMG_SEQ = #{record.emgSeq,jdbcType=VARCHAR},
      </if>
      <if test="record.picType != null" >
        PIC_TYPE = #{record.picType,jdbcType=VARCHAR},
      </if>
      <if test="record.data != null" >
        DATA = #{record.data,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update HSP_BASE64_PIC
    set EMG_SEQ = #{record.emgSeq,jdbcType=VARCHAR},
      PIC_TYPE = #{record.picType,jdbcType=VARCHAR},
      DATA = #{record.data,jdbcType=CLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update HSP_BASE64_PIC
    set EMG_SEQ = #{record.emgSeq,jdbcType=VARCHAR},
      PIC_TYPE = #{record.picType,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="activetech.edpc.pojo.domain.HspBase64Pic" >
    update HSP_BASE64_PIC
    <set >
      <if test="data != null" >
        DATA = #{data,jdbcType=CLOB},
      </if>
    </set>
    where EMG_SEQ = #{emgSeq,jdbcType=VARCHAR}
      and PIC_TYPE = #{picType,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="activetech.edpc.pojo.domain.HspBase64Pic" >
    update HSP_BASE64_PIC
    set DATA = #{data,jdbcType=CLOB}
    where EMG_SEQ = #{emgSeq,jdbcType=VARCHAR}
      and PIC_TYPE = #{picType,jdbcType=VARCHAR}
  </update>
</mapper>