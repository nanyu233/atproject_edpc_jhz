<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="activetech.edpc.dao.mapper.HspDbzlBasMapperCustom">
    <sql id="condition">
        <if test="hspDbzlBasCustom!=null">
            <if test="hspDbzlBasCustom.hspAra!=null and hspDbzlBasCustom.hspAra!=''.toString()">
                and a.hsp_ara =#{hspDbzlBasCustom.hspAra,jdbcType=VARCHAR}
            </if>
            <if test="hspDbzlBasCustom.regSeq != null and hspDbzlBasCustom.regSeq != ''.toString() ">
                and (a.reg_seq like '%' || #{hspDbzlBasCustom.regSeq,jdbcType=VARCHAR} || '%'
                or a.cst_nam like '%' || #{hspDbzlBasCustom.regSeq,jdbcType=VARCHAR} || '%'
                or a.phe_nbr like '%' || #{hspDbzlBasCustom.regSeq,jdbcType=VARCHAR} || '%'
                or a.id_nbr like '%' || #{hspDbzlBasCustom.regSeq,jdbcType=VARCHAR} || '%')
            </if>

        </if>
    </sql>
    <update id="updateHspDbzlBasByRegSeq" parameterType="activetech.edpc.pojo.dto.HspDbzlBasQueryDto">
        update hsp_dbzl_bas a
        set a.id_nbr         = #{hspDbzlBasCustom.idNbr, jdbcType = VARCHAR},
            a.nation         = #{hspDbzlBasCustom.nation, jdbcType = VARCHAR},
            a.emg_job        = #{hspDbzlBasCustom.emgJob, jdbcType = VARCHAR},
            a.cst_edu        = #{hspDbzlBasCustom.cstEdu, jdbcType = VARCHAR},
            a.marital_status = #{hspDbzlBasCustom.maritalStatus, jdbcType = VARCHAR},
            a.jzxh           = #{hspDbzlBasCustom.jzxh, jdbcType = VARCHAR},
            a.zyxh           = #{hspDbzlBasCustom.zyxh, jdbcType = VARCHAR},
            a.mod_no         = #{hspDbzlBasCustom.modNo, jdbcType = VARCHAR},
            a.mod_tim        = sysdate
        where a.reg_seq = #{hspDbzlBasCustom.regSeq, jdbcType = VARCHAR}
    </update>

    <select id="selectHspDbzlBasPatient" parameterType="activetech.edpc.pojo.dto.HspDbzlBasQueryDto"
            resultType="activetech.edpc.pojo.dto.HspDbzlBasCustom">
        <include refid="activetech.base.CommonSql.page_start"/>
        select
        REG_SEQ,
        REG_TIM,
        EMG_SEQ,
        MPI,
        PAT_TYP,
        WAY_TYP,
        CARD_TYPE,
        VST_CAD,
        CST_NAM,
        CST_SEX_COD,
        ID_TYPE,
        ID_NBR,
        CST_AGE_COD,
        CST_AGE,
        PAT_WGT,
        PAT_HGT,
        BTH_DAT,
        PHE_NBR,
        CST_ADR,
        NATION,
        EMG_JOB,
        MARITAL_STATUS,
        CST_EDU,
        LNK_MAN,
        LNK_WAY,
        GRN_CHL,
        SW_CHL,
        HSP_ARA,
        YQXH,
        JZXH,
        ZYXH,
        DOC_DAT,
        JZYS,
        YSXM,
        KSDM,
        CRT_TIM,
        CRT_NO,
        CRT_NAM,
        MOD_TIM,
        MOD_NO,
        MOD_NAM,
        RCD_STA,
        CHK_TIM,
        CHK_NO,
        CHK_NAM,
        CHK_MSG,
        STP_FLG,
        STP_TIM,
        STP_NO,
        STP_NAM,
        SMT_STA,
        SMT_SEQ,
        SMT_MSG
        FROM hsp_dbzl_bas a
        where
        a.pat_typ = #{patTyp,jdbcType = VARCHAR}
        and
        not exists ( select 1 FROM hsp_fuv_pat where pat_id = a.reg_seq)
        <include refid="condition"/>
        <include refid="activetech.base.CommonSql.page_end"/>
    </select>

    <select id="countByCondition" resultType="java.lang.Integer"
            parameterType="activetech.edpc.pojo.dto.HspDbzlBasQueryDto">
        select count(*)
        from hsp_dbzl_bas a
        where
        a.pat_typ = #{patTyp,jdbcType = VARCHAR}
        and
        not exists ( select 1 FROM hsp_fuv_pat where pat_id = a.reg_seq)
        <include refid="condition"/>
    </select>


     <select id="selectByPrimaryByEmgSeq" resultType="activetech.edpc.pojo.domain.HspDbzlBas"
             parameterType="activetech.edpc.pojo.domain.HspDbzlBas">
        select *
        from hsp_dbzl_bas
        where
        emg_seq = #{emgSeq,jdbcType = VARCHAR}
    </select>

    <select id="selectByEmgSeq" resultType="activetech.edpc.pojo.dto.HspDbzlBasCustom"
            parameterType="java.lang.String">
        select *
        from hsp_dbzl_bas a
        where
          a.reg_seq = #{emgSeq,jdbcType=VARCHAR}
           or a.cst_nam = #{emgSeq,jdbcType=VARCHAR}
           or a.phe_nbr = #{emgSeq,jdbcType=VARCHAR}
           or a.id_nbr = #{emgSeq,jdbcType=VARCHAR}
           or a.emg_seq = #{emgSeq,jdbcType=VARCHAR}
    </select>

    <update id="reviewSubmitBySeqArr">
        update hsp_dbzl_bas set
               rcd_sta = #{hspDbzlBasCustom.rcdSta, jdbcType = VARCHAR },
               chk_tim = #{hspDbzlBasCustom.chkTim, jdbcType = TIMESTAMP },
               chk_no = #{hspDbzlBasCustom.chkNo, jdbcType = VARCHAR },
               chk_nam = #{hspDbzlBasCustom.chkNam, jdbcType = VARCHAR },
               chk_msg = #{hspDbzlBasCustom.chkMsg, jdbcType = VARCHAR },
               mod_tim = sysdate,
               mod_no = #{hspDbzlBasCustom.modNo, jdbcType = VARCHAR },
               mod_nam = #{hspDbzlBasCustom.modNam, jdbcType = VARCHAR }
         where reg_seq in
         <foreach collection="seqArr" item="regSeq" open="(" index="idx" close=")" separator="," >
             #{regSeq, jdbcType = VARCHAR }
         </foreach>
    </update>

    <update id="editDbzlBasByReport">
        update hsp_dbzl_bas set
               smt_sta = #{smtSta, jdbcType = VARCHAR },
               smt_seq = nvl(smt_seq, #{smtSeq, jdbcType = VARCHAR }),
               smt_msg = #{smtMsg, jdbcType = VARCHAR },
               smt_no = #{smtNo, jdbcType = VARCHAR },
               smt_nam = #{smtNam, jdbcType = VARCHAR },
               smt_tim = #{smtTim, jdbcType = TIMESTAMP },
               mod_no = #{modNo, jdbcType = VARCHAR },
               mod_nam = #{modNam, jdbcType = VARCHAR },
               mod_tim = sysdate
         where reg_seq = #{regSeq, jdbcType = VARCHAR }
    </update>


    <sql id="xtdbzl_where">
		<if test="hspDbzlBasCustom!=null ">
		<if test="hspDbzlBasCustom.hspAra!=null and hspDbzlBasCustom.hspAra!=''.toString()">
			and a.hsp_ara =#{hspDbzlBasCustom.hspAra,jdbcType=VARCHAR}
		</if>
		</if>
		<if test="cstNam!=null and cstNam!=''">
	   	and a.cst_nam like '%'||#{cstNam,jdbcType=VARCHAR}||'%'
	 	</if>
	 	<if test="endDate!=null and endDate!=''">
	   	and a.crt_tim <![CDATA[<]]> #{endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="startDate!=null and startDate!=''">
	   	and a.crt_tim <![CDATA[>=]]> #{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="dyfs!=null and dyfs!=''">
	   	and exists (select *
      		from hsp_zl_inf
 		    where hsp_zl_inf.emg_no = a.REG_SEQ
 		    and hsp_zl_inf.pro_code = 'DYFS'
 		    and hsp_zl_inf.pro_val = #{dyfs,jdbcType=VARCHAR})
		</if>
		<if test="cbzd!=null and cbzd!=''">
		and exists (select *
  		    from hsp_zl_inf
  		    where hsp_zl_inf.emg_no = a.REG_SEQ
  		    and hsp_zl_inf.pro_code = 'CBZD'
 		    and hsp_zl_inf.pro_val = #{cbzd,jdbcType=VARCHAR})
		</if>
		<if test="ccdw!=null and ccdw!=''">
		and exists (select *
  		    from hsp_zl_inf
  		    where hsp_zl_inf.emg_no = a.REG_SEQ
 		    and hsp_zl_inf.pro_code = 'CCDW'
 		    and hsp_zl_inf.pro_val = #{ccdw,jdbcType=VARCHAR})
		</if>
		<if test="yqrscs!=null and yqrscs!=''">
			and exists (select *
  		    from hsp_zl_inf
  		    where hsp_zl_inf.emg_no = a.REG_SEQ
   		    and hsp_zl_inf.pro_code = 'YQRSCS'
  		    and hsp_zl_inf.pro_val = #{yqrscs,jdbcType=VARCHAR})
		</if>
  </sql>

    <select id="countXtPatientList" parameterType="activetech.edpc.pojo.dto.HspDbzlBasQueryDto"
                resultType="java.lang.Integer">
	select count(1)
	  from hsp_dbzl_bas a
	 where a.PAT_TYP = '1'
	 <include refid="xtdbzl_where"/>
    </select>

    <select id="getXtPatientList" parameterType="activetech.edpc.pojo.dto.HspDbzlBasQueryDto"
            resultType="activetech.edpc.pojo.dto.HspDbzlBasCustom">
  		<include refid="activetech.base.CommonSql.page_start"/>
		select a.reg_seq,
               a.reg_tim,
               a.emg_seq,
               a.mpi,
               a.pat_typ,
               a.way_typ,
               a.card_type,
               a.vst_cad,
               a.cst_nam,
               a.cst_sex_cod,
               a.id_type,
               a.id_nbr,
               a.cst_age_cod,
               decode(a.cst_age_cod, '0', a.cst_age, '0') cstAge,
               a.pat_wgt,
               a.pat_hgt,
               a.bth_dat,
               a.phe_nbr,
               a.cst_adr,
               a.nation,
               a.emg_job,
               a.marital_status,
               a.cst_edu,
               a.lnk_man,
               a.lnk_way,
               a.grn_chl,
               a.sw_chl,
               a.hsp_ara,
               a.yqxh,
               a.jzxh,
               a.zyxh,
               a.doc_dat,
               a.jzys,
               a.ysxm,
               a.ksdm,
               a.crt_tim,
               a.crt_no,
               a.crt_nam,
               a.mod_tim,
               a.mod_no,
               a.mod_nam,
               nvl(a.rcd_sta, '1') rcd_sta,
               a.chk_tim,
               a.chk_no,
               a.chk_nam,
               a.chk_msg,
               a.stp_flg,
               a.stp_tim,
               a.stp_no,
               a.stp_nam,
               nvl(a.smt_sta, '1') smt_sta,
               a.smt_seq,
               a.smt_msg,
               a.smt_no,
               a.smt_nam,
               a.smt_tim,
               (select pro_val
                    from hsp_zl_inf
                 where hsp_zl_inf.pro_code = 'SCYLJCSJ'
                   and hsp_zl_inf.emg_no = reg_seq) scyljcsj,
                 (select pro_val
                  from hsp_zl_inf
                 where hsp_zl_inf.pro_code = 'FBSJ'
                   and hsp_zl_inf.emg_no = reg_seq) fbsj,
                 (select pro_val
                  from hsp_zl_inf
                 where hsp_zl_inf.pro_code = 'CBZD'
                   and hsp_zl_inf.emg_no = reg_seq) cbzd
		from hsp_dbzl_bas a
		where a.PAT_TYP = '1'
		<include refid="xtdbzl_where"/>
		<include refid="activetech.base.CommonSql.page_end"/>
	</select>

    <select id="getHspDbzlBasinf" parameterType="activetech.edpc.pojo.dto.HspDbzlBasQueryDto"
            resultType="activetech.edpc.pojo.dto.HspDbzlBasCustom">
        		select a.reg_seq,
                       a.reg_tim,
                       a.emg_seq,
                       a.mpi,
                       a.pat_typ,
                       a.way_typ,
                       a.card_type,
                       a.vst_cad,
                       a.cst_nam,
                       a.cst_sex_cod,
                       a.id_type,
                       a.id_nbr,
                       a.cst_age_cod,
                       (select info from dstdictinfo where typecode='CST_AGE_COD' and infocode=a.cst_age_cod) cst_age_cod_inf,
                       decode(a.cst_age_cod, '0', a.cst_age, '0') cstAge,
                       a.pat_wgt,
                       a.pat_hgt,
                       a.bth_dat,
                       a.phe_nbr,
                       a.cst_adr,
                       a.nation,
                       a.emg_job,
                       a.marital_status,
                       a.cst_edu,
                       a.lnk_man,
                       a.lnk_way,
                       a.grn_chl,
                       a.sw_chl,
                       a.hsp_ara,
                       a.yqxh,
                       a.jzxh,
                       a.zyxh,
                       a.doc_dat,
                       a.jzys,
                       a.ysxm,
                       a.ksdm,
                       a.crt_tim,
                       a.crt_no,
                       a.crt_nam,
                       a.mod_tim,
                       a.mod_no,
                       a.mod_nam,
                       a.rcd_sta,
                       a.chk_tim,
                       a.chk_no,
                       a.chk_nam,
                       a.chk_msg,
                       a.stp_flg,
                       a.stp_tim,
                       a.stp_no,
                       a.stp_nam,
                       a.smt_sta,
                       a.smt_seq,
                       a.smt_msg
                from Hsp_Dbzl_Bas a
                where a.reg_seq = #{regSeq, jdbcType = VARCHAR}
    </select>

</mapper>