<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="activetech.edpc.dao.mapper.EDPCReportMapperCustom">
	
	<select id="getCzNIHSSRate" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
	  select yarmon,
	        sum(case
	              when reg_seq is not null then
	               1
	              else
	               0
	            end) total,
	        sum(case
	              when cou >= 1 then
	               1
	              else
	               0
	            end) as tnumb
	   from (select a.yarmon, a.reg_seq, b.cou
	           from (select d.yarmon, c.reg_seq
	                   from (select reg_seq, to_char(reg_tim, 'yyyy/mm') yarmon
	                           from hsp_dbzl_bas
	                          where pat_typ = '2') c,
	                        (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR},
	                                                           'YYYY/MM'),
	                                                   rownum - 1),
	                                        'YYYY/MM') yarmon
	                           from dual
	                         connect by rownum <![CDATA[ <= ]]>
	                                    months_between(to_date(#{endDate,jdbcType = VARCHAR},
	                                                           'YYYY/MM'),
	                                                   to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
	                  where d.yarmon = c.yarmon(+)) a,
	                (select emg_no, count(*) cou
	                   from hsp_zl_inf
	                  where pro_code in ('NIHSSPF01', 'NIHSSPF02')
	                  group by emg_no) b
	          where a.reg_seq = b.emg_no(+))
	  group by yarmon
	  order by yarmon
	</select>
	
	<select id="getD2dmqsTime" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult" >
		select d.yarmon,
		       count(c.reg_seq) patNumb,
		       nvl(round(sum(c.flowtime1 - c.flowtime2) * 24 * 60 /
		                 count(c.reg_seq),
		                 2),
		           0) avgtime,
		       nvl(round(median((c.flowtime1 - c.flowtime2) * 24 * 60), 2), 0) mediantime,
		       nvl(round(max(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0) maxMin,
		       nvl(round(min(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0) minMin
		  from (select b.reg_seq,
					   to_char(b.reg_tim, 'YYYY/MM') crtyarmon,
					   (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
						from hsp_zl_inf
						where emg_no = a.emg_no
						  and pro_code = 'KSCCSJ') flowtime1,
					   (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
						from hsp_zl_inf
						where emg_no = a.emg_no
						  and pro_code = 'DYSJ') flowtime2
				from (select emg_no
					  from hsp_zl_inf
					  where pro_code = 'ISQS'
						and pro_val = '0') a,
					 hsp_dbzl_bas b
				where a.emg_no = b.reg_seq
				  and b.pat_typ = '2'
			   ) c,
		       (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'), rownum - 1),
		                       'YYYY/MM') yarmon
		          from dual
		        connect by rownum <![CDATA[ <= ]]>
		                   months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                  to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		 where c.crtyarmon(+) = d.yarmon
		 group by d.yarmon
		 order by d.yarmon
	</select>
	
	<select id="getctAvgTime" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult" >
		select d.yarmon,
		       count(c.reg_seq) patNumb,
		       sum(case when round((c.flowtime1 - c.flowtime2) * 24 * 60, 2) <![CDATA[ < ]]> 25 then 1 else 0 end) tnumb,
		       nvl(round(sum(c.flowtime1 - c.flowtime2) * 24 * 60 /
		                 count(c.reg_seq),
		                 2),
		           0) avgtime,
		       nvl(round(median((c.flowtime1 - c.flowtime2) * 24 * 60), 2), 0) mediantime,
		       nvl(round(max(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0) maxMin,
		       nvl(round(min(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0) minMin
		  from (select b.reg_seq,
					   to_char(b.reg_tim, 'YYYY/MM') crtyarmon,
					   (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
						from hsp_zl_inf
						where emg_no = a.emg_no
						  and pro_code = 'TLYXSJ') flowtime1,
					   (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
						from hsp_zl_inf
						where emg_no = a.emg_no
						  and pro_code = 'DYSJ') flowtime2
				from (select emg_no from hsp_zl_inf where pro_code = 'TLYXSJ') a,
					 hsp_dbzl_bas b
				where a.emg_no = b.reg_seq
				  and b.pat_typ = '2') c,
		       (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'), rownum - 1),
		                       'YYYY/MM') yarmon
		          from dual
		        connect by rownum <![CDATA[ <= ]]>
		                   months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                  to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		 where c.crtyarmon(+) = d.yarmon
		 group by d.yarmon
		 order by d.yarmon
	</select>
	
	
	<select id="getrsTimeUpToStandardRate" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult" >
		   select d.yarmon,
		          count(c.emg_seq) patNumb,
		          sum(case
		                when (c.rszlkssj is null or c.fbsj is null) then
		                 0
		                when c.rsywxz = '01' and
		                     nvl(round((c.rszlkssj - c.fbsj) * 24 * 60, 2), 0) <![CDATA[ <= ]]>
		                     4.5 * 60 
		                then
		                 1
		                else 
		                 0
		              end) tnumb
		     from (select b.emg_seq,
		                  to_char(b.emg_dat, 'YYYY/MM') crtyarmon,
		                  (select cast(ill_tim as date) fbsj
		                     from aid_patient
		                    where patid = (select patid
		                                     from hsp_emg_inf
		                                    where emg_seq = a.emg_no)) fbsj,
		                  (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
		                     from hsp_zl_inf
		                    where emg_no = a.emg_no
		                      and pro_code = 'RSZLKSSJ') rszlkssj,
		                  (select pro_val
		                     from hsp_zl_inf
		                    where emg_no = a.emg_no
		                      and pro_code = 'YWXZ') rsYwXz
		             from (select emg_no
		                     from hsp_zl_inf
		                    where pro_code = 'CBZD'
		                      and pro_val = '02') a,
		                  hsp_emg_inf b
		            where a.emg_no = b.emg_seq
		              and b.czlcflg = '1') c,
		          (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     rownum - 1),
		                          'YYYY/MM') yarmon
		             from dual
		           connect by rownum <![CDATA[ <= ]]>
		                      months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		    where c.crtyarmon(+) = d.yarmon
		    group by d.yarmon
		    order by d.yarmon
	</select>
	
	<select id="getin60MinRsRate" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		   select d.yarmon,
		          count(c.emg_seq) patNumb,
		          sum(case
		                when c.rszlkssj is null then
		                 0
		                when nvl(round((c.rszlkssj - c.emg_dat) * 24 * 60, 2), 0) <![CDATA[ <= ]]> 60 then
		                 1
		                else
		                 0
		              end) tnumb
		     from (select b.emg_seq,
		                  to_char(b.emg_dat, 'YYYY/MM') crtyarmon,
		                  cast(b.emg_dat as date) emg_dat,
		                  (select cast(ill_tim as date) fbsj
		                     from aid_patient
		                    where patid = (select patid
		                                     from hsp_emg_inf
		                                    where emg_seq = a.emg_no)) fbsj,
		                  (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
		                     from hsp_zl_inf
		                    where emg_no = a.emg_no
		                      and pro_code = 'RSZLKSSJ') rszlkssj
		             from (select emg_no
		                     from hsp_zl_inf
		                    where pro_code = 'YXXZDJG'
		                      and pro_val = '0') a,
		                  hsp_emg_inf b
		            where a.emg_no = b.emg_seq
		              and b.czlcflg = '1') c,
		          (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     rownum - 1),
		                          'YYYY/MM') yarmon
		             from dual
		           connect by rownum <![CDATA[ <= ]]>
		                      months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		    where c.crtyarmon(+) = d.yarmon
		    group by d.yarmon
		    order by d.yarmon
	</select>
	
	<select id="getCpcTrendData" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
		 (select t.seq_no,
		         t.emg_no,
		         t.pro_code,
		         t.pro_val,
		         t.crt_time,
		         t.crt_user,
		         t.mod_time,
		         t.mod_user
		  FROM hsp_zl_inf t, hsp_dbzl_bas d
		  WHERE t.emg_no = d.reg_seq
			and d.pat_typ = '1'
			and t.pro_code = 'CBZD')
		select m.month yarmon,
		       d.infocode,
		       d.info,
		       (select count(1)
		          from temp
		         where temp.pro_val = d.infocode
		           and to_char(temp.crt_time, 'yyyy/mm') = m.month) total
		  from dstdictinfo d,
		       (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy/mm'), rownum - 1),
		                       'yyyy/mm') as month
		          from dual
		        connect by rownum <=
		                   months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy/mm'),
		                                  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy/mm')) + 1) m
		 where d.typecode = 'XT_CBZD_COD'
		   and d.isenable = '1'
		 order by m.month, d.dictsort nulls last
		]]>
	</select>

	<select id="getCpcTrendGridData" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		select yarmon,
		       stemi,
		       nstemi,
		       ua,
		       zdmjc,
		       fss,
		       nacs,
		       other,
		       nvl((stemi + nstemi + ua + zdmjc + fss + nacs + other), 0) total
		  from (select yarmon,
		               nvl(stemi, 0) stemi,
		               nvl(nstemi, 0) nstemi,
		               nvl(ua, 0) ua,
		               nvl(zdmjc, 0) zdmjc,
		               nvl(fss, 0) fss,
		               nvl(nacs, 0) nacs,
		               nvl(other, 0) other
		          from (with temp as (select t.seq_no,
		                                     t.emg_no,
		                                     t.pro_code,
		                                     t.pro_val,
		                                     t.crt_time,
		                                     t.crt_user,
		                                     t.mod_time,
		                                     t.mod_user
		                                from hsp_zl_inf t
		                               where t.pro_code = 'CBZD')
		                 select m.month yarmon,
		                        d.info,
		                        (select count(1)
		                           from temp
		                          where temp.pro_val = d.infocode
		                            and to_char(temp.crt_time, 'yyyy/mm') = m.month) total
		                   from dstdictinfo d,
		                        (select to_char(add_months(to_date(#{startDate,
		                                                           jdbcType = VARCHAR},
		                                                           'yyyy/mm'),
		                                                   rownum - 1),
		                                        'yyyy/mm') as month
		                           from dual
		                         connect by rownum <=
		                                    months_between(to_date(#{endDate,
		                                                           jdbcType = VARCHAR},
		                                                           'yyyy/mm'),
		                                                   to_date(#{startDate,
		                                                           jdbcType = VARCHAR},
		                                                           'yyyy/mm')) + 1) m
		                  where d.typecode = 'XT_CBZD_COD'
		                    and d.isenable = '1'
		                  order by m.month, d.dictsort nulls last) a
		                 pivot(sum(total)
		                    for info in('STEMI' stemi,
		                                'NSTEMI' nstemi,
		                                'UA' ua,
		                                '主动脉夹层' zdmjc,
		                                '肺栓塞' fss,
		                                '非ACS胸痛' nacs,
		                                '其他' other))
		                  order by yarmon
		        )

		]]>
	</select>
	
	<select id="getCpcPieData" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">

			with temp as
			 (select t.seq_no,
			         t.emg_no,
			         t.pro_code,
			         t.pro_val,
			         t.crt_time,
			         t.crt_user,
			         t.mod_time,
			         t.mod_user
				FROM hsp_zl_inf t, hsp_dbzl_bas d
				WHERE t.emg_no = d.reg_seq
				and d.pat_typ = '1'
				and t.pro_code = 'CBZD')
			select d.infocode,
			       d.info,
			       (select count(1)
			          from temp
			         where temp.pro_val = d.infocode
			           <if test = "startDate !=null ">
				 			and temp.crt_time > to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy/mm')
				 	   </if>
				 	   <if test = "endDate !=null ">

				 			and temp.crt_time <![CDATA[<]]> add_months(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy/mm'), 1)

				 	   </if>
				   ) total
			  from dstdictinfo d
			 where d.typecode = 'XT_CBZD_COD'
			   and d.isenable = '1'
			 order by d.dictsort nulls last
		
	</select>

	<select id="getTruamaTrendData" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
			select m.month yarmon,
			       (select count(1)
			          from hsp_emg_inf emg
			         where emg.cspg_flg = '1'
			           and to_char(emg.emg_dat, 'yyyy/mm') = m.month) total
			  from (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
			                       'yyyy/MM') as month
			          from dual
			        connect by rownum <=
			                   months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-mm'),
			                                  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
			 order by m.month nulls last
		]]>
	</select>

	<select id="getZlsjzwsData" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		select round(median(hours), 2) median, mdate yarmon
		  from (select (to_date(to_char(to_timestamp(sql_dat), 'yyyy-mm-dd hh24:mi'),
		                        'yyyy-mm-dd hh24:mi') -
		               to_date(to_char(to_timestamp(emg_dat), 'yyyy-mm-dd hh24:mi'),
		                        'YYYY-MM-DD HH24:mi')) * 24 hours,
		               sql_dat,
		               emg_dat,
		               cst_dsp_cod,
		               sql_sta_cod
		          from hsp_emg_inf a, hsp_sql_inf b
		         where a.sql_seq = b.sql_seq
		           and a.cst_dsp_cod in ('6', '10')
		           and b.sql_sta_cod <> '3'
		           and a.cspg_flg = '1'
		           and a.emg_seq in (select emg_seq
		                               from hsp_sql_inf
		                              group by emg_seq
		                             having count(emg_seq) > 1)),
		       (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy/mm'), rownum - 1),
		                       'yyyy/mm') mdate
		          from dual
		        connect by rownum <=
		                   months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy/mm'),
		                                  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy/mm')) + 1) mon
		 where mon.mdate = to_char(emg_dat(+), 'yyyy/mm')
		 group by mdate
		 order by mdate asc
		]]>
	</select>

	<!-- 严重创伤患者抢救成功率 -->
	<select id="getTruamaRescueRate" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
		 (select t.rn, t.emg_seq, t.iss_scoe, t.crt_time, e.emg_dat
		    from (select row_number() over(partition by res.emg_seq order by res.crt_time asc) as rn,
		                 res.emg_seq,
		                 res.iss_scoe,
		                 res.crt_time
		            from hsp_cspf_res res) t,
		         hsp_emg_inf e
		   where t.emg_seq = e.emg_seq
		     and e.cspg_flg = '1'
		     and e.cst_dsp_cod = '6'
		     and t.rn = 1
		     and t.iss_scoe >= 16
		     and e.emg_seq in (select emg_seq
		                         from hsp_sql_inf
		                        group by emg_seq
		                       having count(1) > 1))
		select a.month yarmon,
		       a.totalnum total,
		       a.rescuenum patNumb,
		       decode(a.totalnum, 0, '-', to_char(round(a.rescuenum / a.totalnum * 100, 2), 'FM99999990.00') || '%') rate
		  from (select m.month,
		               (select count(1)
		                  from temp
		                 where to_char(temp.emg_dat, 'yyyy/mm') = m.month) totalnum,
		               (select count(1)
		                  from temp,
		                       (select row_number() over(partition by s.emg_seq order by s.reg_dat desc) as rn,
		                               s.emg_seq,
		                               s.sql_sta_cod
		                          from hsp_sql_inf s) s1
		                 where s1.emg_seq = temp.emg_seq
		                   and s1.sql_sta_cod not in ('3', '14')
		                   and s1.rn = 1
		                   and to_char(temp.emg_dat, 'yyyy/mm') = m.month) rescuenum
		          from (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy/mm'),
		                                          rownum - 1), 'yyyy/mm') as month
		                  from dual
		                connect by rownum <=
		                           months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy/mm'),
		                                          to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy/mm')) + 1) m) a
		]]>
	</select>
  	
  	<select id="getYqjjzyRate" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
						with temp as
				 (select emg.emg_seq,
				         (select pro_val
				            from hsp_zl_inf
				           where pro_code = 'DYSJ'
				             and emg_no = emg.emg_seq) dysj,
				         (select pro_val
				            from hsp_zl_inf
				           where pro_code = 'LCSJ'
				             and emg_no = emg.emg_seq) lcsj,
				         to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				    from hsp_emg_inf emg
				   where cspg_flg = '1')
				
				select m.month yarmon, nvl(avg(temp.dysj - temp.lcsj)*24*60,0) avgtime
				  from temp,
				       (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
				                       'yyyy/MM') as month
				          FROM dual
				        connect by rownum <=
				                   months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-mm'),
				                                  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
				 where m.month = temp.emg_dat(+)
				 group by m.month
				 order by m.month
		]]>
	</select>
	
	<select id="getCsxxyjRate" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
		 (select emg.emg_seq,
		         (select pro_val
		            from hsp_zl_inf
		           where pro_code = 'YJSJ'
		             and emg_no = emg.emg_seq) yjsj,
		         (select pro_val
		            from hsp_zl_inf
		           where pro_code = 'LYFS'
		             and emg_no = emg.emg_seq) lyfs,
		         to_char(emg.emg_dat, 'yyyy/mm') emg_dat
		    from hsp_emg_inf emg
		   where cspg_flg = '1')
		select m.month yarmon, nvl(bl, 0) tnumb
		  from (select temp.emg_dat,
		               decode(sum(case
		                            when (lyfs = '01' or lyfs = '02') and yjsj is not null then
		                             1
		                            else
		                             0
		                          end),
		                      0,
		                      0,
		                      sum(nvl2(yjsj, 1, 0)) /
		                      sum(case
		                            when (lyfs = '01' or lyfs = '02') and yjsj is not null then
		                             1
		                            else
		                             0
		                          end)) bl
		          from temp
		         group by temp.emg_dat),
		       (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
		                       'yyyy/MM') as month
		          FROM dual
		        connect by rownum <=
		                   months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-mm'),
		                                  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		 where m.month = emg_dat(+)
		 order by m.month
		]]>
	</select>
	
	<select id="getYzcsbrmjzzbRate" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
				 (select emg.emg_seq,
				         (select pro_val
				            from hsp_zl_inf
				           where pro_code = 'DDJZKSJ'
				             and emg_no = emg.emg_seq) DDJZKSJ,
				         (select pro_val
				            from hsp_zl_inf
				           where pro_code = 'JZSJ'
				             and emg_no = emg.emg_seq) JZSJ,
				         to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				    from hsp_emg_inf emg, hsp_iss_inf iss
				   where cspg_flg = '1'
				     and (iss.iss_sco >= '16' or iss.iss_tjb_cod >= '3' or
				         iss.iss_mb_cod >= '3' or iss.iss_xb_cod >= '3' or
				         iss.iss_fb_cod >= '3' or iss.iss_sz_cod >= '3' or
				         iss.iss_tb_cod >= '3'))
				select m.month yarmon, nvl(avg(temp.JZSJ - temp.DDJZKSJ)*24*60 ,0) avgtime
				  from temp,
				       (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
				                       'yyyy/MM') as month
				          FROM dual
				        connect by rownum <=
				                   months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-mm'),
				                                  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
				 where m.month = temp.emg_dat(+)
				 group by m.month
				 order by m.month
		]]>
	</select>
	
  	<select id="getCsyzhzdyqjData" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
		 (select q.emg_seq,
		         q.cst_nam,
		         q.emg_dat,
		         w.crt_tim,
		         (to_date(TO_CHAR(to_timestamp(w.crt_tim), 'yyyy-mm-dd hh24:mi'),
		                        'yyyy-mm-dd hh24:mi') -
		               to_date(TO_CHAR(to_timestamp(q.emg_dat), 'yyyy-mm-dd hh24:mi'),
		                        'YYYY-MM-DD HH24:mi')) * 24 hours
		    from (select b.*
		            from hsp_cspf_res a, hsp_emg_inf b
		           where a.emg_seq = b.emg_seq
		             and b.cspg_flg = '1'
		             and iss_scoe >= 16) q,
		         (select a.rn,
		                 a.abc_seq,
		                 a.emg_seq,
		                 a.fld_cod,
		                 a.fld_val,
		                 a.usr_no,
		                 a.usr_nme,
		                 a.crt_tim
		            from (select row_number() over(partition by t.emg_seq order by t.crt_tim asc) rn,
		                         t.abc_seq,
		                         t.emg_seq,
		                         t.fld_cod,
		                         t.fld_val,
		                         t.usr_no,
		                         t.usr_nme,
		                         t.crt_tim
		                    from hsp_csabc_inf t) a
		           where a.rn = 1) w
		   where q.emg_seq = w.emg_seq)
		select nvl(round(avg(hours), 2), 0) avgTime, mdate yarmon
		  from (select *
		          from temp,
		               (SELECT TO_CHAR(ADD_MONTHS(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-MM'),
		                                          ROWNUM - 1),
		                               'yyyy/MM') mdate
		                  FROM DUAL
		                CONNECT BY ROWNUM <=
		                           months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-MM'),
		                                          to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-MM')) + 1) mon
		         where mon.mdate = to_char(EMG_DAT(+), 'yyyy/MM'))
		         group by mdate
		         order by mdate asc
		]]>
	</select>
	
	<select id="getXtReport" parameterType="activetech.edpc.pojo.dto.ReportCondition" 
		resultType="activetech.edpc.pojo.dto.ReportDataResult" >
		select d.yarmon,
		       count(c.reg_seq) patNumb,
		       nvl(round(sum(c.flowtime1 - c.flowtime2)*24*60 / count(c.reg_seq),2),0) avgtime,
		       nvl(round(median((c.flowtime1 - c.flowtime2)*24*60), 2), 0) mediantime,
		       nvl(round(max(c.flowtime1 - c.flowtime2)*24*60,2),0) maxMin,
		       nvl(round(min(c.flowtime1 - c.flowtime2)*24*60,2),0) minMin
		  from (select b.reg_seq,
		               to_char(b.reg_tim, 'YYYY/MM') crtyarmon,
		               (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
		                  from hsp_zl_inf
		                 where emg_no = a.emg_no
		                   and pro_code = #{endProCode,jdbcType = VARCHAR}) flowtime1,
		               		(select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
				                from hsp_zl_inf
				                where emg_no = a.emg_no
				                and pro_code = #{startProCode,jdbcType = VARCHAR} )
		                   flowtime2
		          from (select emg_no
		                  from hsp_zl_inf
		                 where pro_code in (#{endProCode,jdbcType = VARCHAR}, #{startProCode,jdbcType = VARCHAR})
		                 
		                 <choose>
		                 	<when test="reportTypeFlag!= null and reportTypeFlag!= ''and 
		                 	(reportTypeFlag == 'FIRST_ECG'.toString() or 
		                 	 reportTypeFlag == 'DGSJH'.toString())">
			                   		
		                 	</when>
		                 	<otherwise>
		                 		and emg_no in(
			                   		select emg_no 
					                  from hsp_zl_inf
					                 where pro_code = 'CBZD'
					                   and pro_val = '1'
			                   )
		                 	</otherwise>
		                 </choose>
		                   
		                 group by emg_no
		                 <choose>
		                 	<when test="reportTypeFlag!= null and reportTypeFlag!= ''and reportTypeFlag == 'D2W'.toString()">
		                 	</when>
		                 	<when test="reportTypeFlag!= null and reportTypeFlag!= ''and reportTypeFlag == 'KXXB'.toString()">
		                 	</when>
		                 	<when test="reportTypeFlag!= null and reportTypeFlag!= ''and reportTypeFlag == 'FIRST_ECG'.toString()">
		                 	</when>
		                 	<when test="reportTypeFlag!= null and reportTypeFlag!= ''and reportTypeFlag == 'KN'.toString()">
		                 	</when>
		                 	<otherwise>
		                 		 having count(*) = 2
		                 	</otherwise>
		                 </choose>
		               
		                ) a,
					    hsp_dbzl_bas b
		         where a.emg_no = b.reg_seq
		           and b.pat_typ = '1') c,
		       (select to_char(add_months(to_date(#{startDate,
		                                          jdbcType = VARCHAR},
		                                          'YYYY/MM'),
		                                  rownum - 1),
		                       'YYYY/MM') yarmon
		          from dual
		        connect by rownum <![CDATA[ <= ]]> months_between(to_date(#{endDate,
		                                              jdbcType = VARCHAR},
		                                              'YYYY/MM'),
		                                      to_date(#{startDate,
		                                              jdbcType = VARCHAR},
		                                              'YYYY/MM')) + 1) d
		 where c.crtyarmon(+) = d.yarmon
		 group by d.yarmon
		 order by d.yarmon
				
	</select>
    <!--转诊STEMI患者F2W时间-->
    <select id="getXtReport02" parameterType="activetech.edpc.pojo.dto.ReportCondition"
            resultType="activetech.edpc.pojo.dto.ReportDataResult">
		select d.yarmon,
			   count(c.reg_seq) patNumb,
			   nvl(round(sum(c.flowtime1 - c.flowtime2) * 24 * 60 /
						 count(c.reg_seq),
						 2),
				   0) avgtime,
			   nvl(round(median((c.flowtime1 - c.flowtime2) * 24 * 60), 2), 0) mediantime,
			   nvl(round(max(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0) maxMin,
			   nvl(round(min(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0) minMin
		  from (select f.reg_seq reg_seq,
					   to_char(f.reg_tim, 'YYYY/MM') crtyarmon,
					   flowtime1,
					   (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
						from hsp_zl_inf
						where emg_no = f.emg_seq
						  and pro_code = 'SCYLJCSJ') flowtime2
				from (select emg_seq, (min(dstgsj) + 0) as flowtime1
					  from hsp_crivel_inf
					  where exists (select 1
									from hsp_zl_inf
									where pro_code = 'CBZD'
									  and pro_val = '1'
									  and emg_seq = hsp_zl_inf.emg_no)
						and exists (select 1
									from hsp_zl_inf
									where pro_code = 'ZGZCS'
									  and pro_val = '1'
									  and emg_seq = hsp_zl_inf.emg_no)
					  group by emg_seq) e,
					 hsp_dbzl_bas f
				where e.emg_seq = f.reg_seq
				  and f.pat_typ = '1') c,
		       (select to_char(add_months(to_date(#{startDate,
		                                          jdbcType = VARCHAR},
		                                          'YYYY/MM'),
		                                  rownum - 1),
		                       'YYYY/MM') yarmon
		          from dual
		        connect by rownum <![CDATA[ <= ]]> months_between(to_date(#{endDate,
		                                              jdbcType = VARCHAR},
		                                              'YYYY/MM'),
		                                      to_date(#{startDate,
		                                              jdbcType = VARCHAR},
		                                              'YYYY/MM')) + 1) d
		 where c.crtyarmon(+) = d.yarmon
		 group by d.yarmon
		 order by d.yarmon

 </select>

    <select id="getAvgXdtqzsj"  parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult" >
		select d.yarmon,
		       count(c.reg_seq) patNumb,
		       nvl(round(sum(c.flowtime1 - c.flowtime2) * 24 * 60 /
		                 count(c.reg_seq),
		                 2),
		           0) avgtime,
		       nvl(round(median((c.flowtime1 - c.flowtime2) * 24 * 60), 2), 0) mediantime,
		       nvl(round(max(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0) maxMin,
		       nvl(round(min(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0) minMin
		  from (select b.reg_seq,
		               to_char(b.reg_tim, 'YYYY/MM') crtyarmon,
		               a.file_dia_date+0 flowtime1,
		               a.file_date+0 flowtime2
		          from (select distinct ref_id as ref_id,
		                       file_dia_date,
		                       file_date
		                  from hsp_ecg_inf
		                 where file_date is not null
		                   and file_dia_date is not null
		                   and exists(select 1 
		                                from hsp_zl_inf 
		                               where emg_no = hsp_ecg_inf.ref_id
		                                 and pro_code = 'CBZD'
		                                 and pro_val = '1')	
		                 ) a,
					   hsp_dbzl_bas b
		         where a.ref_id = b.reg_seq
		           and b.pat_typ = '1') c,
		       (select to_char(add_months(to_date(#{startDate,
		                                              jdbcType = VARCHAR}, 'YYYY/MM'), rownum - 1),
		                       'YYYY/MM') yarmon
		          from dual
		        connect by rownum <![CDATA[ <= ]]> months_between(to_date(#{endDate,
		                                              jdbcType = VARCHAR},
		                                              'YYYY/MM'),
		                                      to_date(#{startDate,
		                                              jdbcType = VARCHAR},
		                                              'YYYY/MM')) + 1) d
		 where c.crtyarmon(+) = d.yarmon
		 group by d.yarmon
		 order by d.yarmon
	</select>
	
	<select id="getSfxdtsj"  parameterType="activetech.edpc.pojo.dto.ReportCondition" 
		resultType="activetech.edpc.pojo.dto.ReportDataResult" >
		select d.yarmon,
			   count(c.reg_seq)                                                patNumb,
			   nvl(round(sum(c.flowtime1 - c.flowtime2) * 24 * 60 /
						 count(c.reg_seq),
						 2),
				   0)                                                          avgtime,
			   nvl(round(median((c.flowtime1 - c.flowtime2) * 24 * 60), 2), 0) mediantime,
			   nvl(round(max(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0)      maxMin,
			   nvl(round(min(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0)      minMin
		from (select reg_seq,
					 to_char(reg_tim, 'YYYY/MM') crtyarmon,
					 file_date + 0 flowtime1,
					 scyljc + 0 flowtime2
			  from (select a.reg_seq, a.reg_tim, b.file_date, c.scyljc
					from hsp_dbzl_bas a,
						 (SELECT ref_id, file_date
						  FROM (SELECT ref_id,
									   file_date,
									   row_number() over(partition by REF_ID order by FILE_DATE) rn
								FROM hsp_ecg_inf
								WHERE file_date is not null
								  and ref_id is not null)
						  where rn = 1) b,
						 (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS') scyljc,
								 emg_no
						  FROM hsp_zl_inf
						  WHERE pro_code = 'SCYLJCSJ') c
					where a.reg_seq = b.ref_id
					  and a.reg_seq = c.emg_no)) c,
			 (select to_char(add_months(to_date(#{startDate, jdbcType = VARCHAR}, 'YYYY/MM'), rownum - 1),'YYYY/MM') yarmon
			  from dual
			  connect by rownum <![CDATA[ <= ]]> months_between(to_date(#{endDate, jdbcType = VARCHAR}, 'YYYY/MM'),
			    to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		where c.crtyarmon(+) = d.yarmon
		group by d.yarmon
		order by d.yarmon
	</select>


	<select id="getD2Wsj" parameterType="activetech.edpc.pojo.dto.ReportCondition"
			resultType="activetech.edpc.pojo.dto.ReportDataResult" >
		select d.yarmon,
			   count(c.reg_seq) patNumb,
			   nvl(round(sum(c.flowtime1 - c.flowtime2) * 24 * 60 / count(c.reg_seq),2),0) avgtime,
			   nvl(round(median((c.flowtime1 - c.flowtime2) * 24 * 60), 2), 0) mediantime,
			   nvl(round(max(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0) maxMin,
			   nvl(round(min(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0) minMin
		from (select a.reg_seq, a.crtyarmon, to_date(a.flowtime2, 'yyyy-MM-dd hh24:mi') flowtime2, b.flowtime1
			  from (select temp.reg_seq, temp.crtyarmon, temp.dyfs,
						   (case
								when temp.DYFS = '1' then
									temp.DDYYDMSJ01
								when temp.DYFS = '2' then
									temp.DDYYDMSJ02
								when temp.DYFS = '3' then
									temp.DDYYDMSJ03
								when temp.DYFS = '4' then
									temp.SCYLJCSJ
							   end) as flowtime2
					from (select reg_seq,
								 to_char(reg_tim, 'YYYY/MM') crtyarmon,
								 (select pro_val
								  from hsp_zl_inf
								  where hsp_zl_inf.pro_code = 'DYFS'
									and hsp_zl_inf.emg_no = emg_seq) dyfs,
								 (select pro_val
								  from hsp_zl_inf
								  where hsp_zl_inf.pro_code = 'DDYYDMSJ01'
									and hsp_zl_inf.emg_no = emg_seq) DDYYDMSJ01,
								 (select pro_val
								  from hsp_zl_inf
								  where hsp_zl_inf.pro_code = 'DDYYDMSJ02'
									and hsp_zl_inf.emg_no = emg_seq) DDYYDMSJ02,
								 (select pro_val
								  from hsp_zl_inf
								  where hsp_zl_inf.pro_code = 'DDYYDMSJ03'
									and hsp_zl_inf.emg_no = emg_seq) DDYYDMSJ03,
								 (select pro_val
								  from hsp_zl_inf
								  where hsp_zl_inf.pro_code = 'SCYLJCSJ'
									and hsp_zl_inf.emg_no = emg_seq) scyljcsj
						  from hsp_dbzl_bas
						  where pat_typ = '1') temp) a,
				   (select emg_seq, (min(dstgsj) + 0) as flowtime1
					from hsp_crivel_inf
					where exists (select 1
								  from hsp_zl_inf
								  where pro_code = 'CBZD'
									and pro_val = '1'
									and emg_seq = hsp_zl_inf.emg_no)
					  and exists (select 1
								  from hsp_zl_inf
								  where pro_code = 'ZGZCS'
									and pro_val = '1'
									and emg_seq = hsp_zl_inf.emg_no)
					group by emg_seq) b
			  where a.reg_seq = b.emg_seq) c,
			 (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'), rownum - 1),
							 'YYYY/MM') yarmon
			  from dual
				  connect by rownum <![CDATA[ <= ]]>
                        months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
				  to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		where c.crtyarmon(+) = d.yarmon
		group by d.yarmon
		order by d.yarmon
	</select>
	
	<select id="getXhysj" parameterType="activetech.edpc.pojo.dto.ReportCondition" 
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		select d.yarmon,
		       count(c.emg_seq) patNumb,
		       nvl(round(sum(c.flowtime1 - c.flowtime2)*24*60 / count(c.emg_seq),2),0) avgtime,
		       nvl(round(median((c.flowtime1 - c.flowtime2)*24*60), 2), 0) mediantime,
		       nvl(round(max(c.flowtime1 - c.flowtime2)*24*60,2),0) maxMin,
		       nvl(round(min(c.flowtime1 - c.flowtime2)*24*60,2),0) minMin
		  from (select b.emg_seq,
		               to_char(b.emg_dat, 'YYYY/MM') crtyarmon,
		               (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
		                  from hsp_zl_inf
		                 where emg_no = a.emg_no
		                   and pro_code = #{endProCode,jdbcType = VARCHAR}) flowtime1,
		                   
               		   (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
		                  from hsp_zl_inf
		                 where emg_no = a.emg_no
		                   and pro_code = #{startProCode,jdbcType = VARCHAR} ) flowtime2
		                   
		          from (select emg_no
		                  from hsp_zl_inf
		                 where pro_code in(#{startProCode,jdbcType = VARCHAR}, #{endProCode,jdbcType = VARCHAR})
		                 group by emg_no
		                 having count(*) = 2
		                ) a,
		               hsp_emg_inf b
		         where a.emg_no = b.emg_seq
		           and b.xtlcflg = '1') c,
		       (select to_char(add_months(to_date(#{startDate,
		                                          jdbcType = VARCHAR},
		                                          'YYYY/MM'),
		                                  rownum - 1),
		                       'YYYY/MM') yarmon
		          from dual
		        connect by rownum <![CDATA[ <= ]]> months_between(to_date(#{endDate,
		                                              jdbcType = VARCHAR},
		                                              'YYYY/MM'),
		                                      to_date(#{startDate,
		                                              jdbcType = VARCHAR},
		                                              'YYYY/MM')) + 1) d
		 where c.crtyarmon(+) = d.yarmon
		 group by d.yarmon
		 order by d.yarmon
	</select>
	
	<select id="getYnswlReport" parameterType="activetech.edpc.pojo.dto.ReportCondition"  
		resultType="activetech.edpc.pojo.dto.ReportDataResult"   >
		   select d.yarmon,
		          count(c.reg_seq) patNumb,
		          sum(case
		                when c.zg = '4' then
		                 1 else 0
		              end) tnumb
		     from (select b.reg_seq,
						  to_char(b.REG_TIM, 'YYYY/MM') crtyarmon,
						  (select pro_val
						   FROM hsp_zl_inf
						   WHERE emg_no = a.emg_no
							 and pro_code = 'HZZG')     zg
				   FROM (select emg_no
						 FROM hsp_zl_inf
						 WHERE pro_code = 'CBZD'
						   and pro_val = '1') a,
						HSP_DBZL_BAS b
				   WHERE a.emg_no = b.reg_seq
					 and b.PAT_TYP = '1') c,
		          (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     rownum - 1),
		                          'YYYY/MM') yarmon
		             from dual
		           connect by rownum <![CDATA[ <= ]]>
		                      months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		    where c.crtyarmon(+) = d.yarmon
		    group by d.yarmon
		    order by d.yarmon
	</select>
	
	<select id="getACS24tatinReport" parameterType="activetech.edpc.pojo.dto.ReportCondition"  
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		   select d.yarmon,
		          count(c.reg_seq) patNumb,
		          sum(case
		                when c.tatin = '1' then
		                 1 else 0 end) tnumb
		     from (select b.reg_seq,
						  to_char(b.REG_TIM, 'YYYY/MM') crtyarmon,
						  (select pro_val
						   FROM hsp_zl_inf
						   WHERE emg_no = a.emg_no
							 and pro_code = 'TTZL')     tatin
				   FROM (select emg_no
						 FROM hsp_zl_inf
						 WHERE pro_code = 'CBZD'
						   and pro_val in ('1', '2', '3')) a,
						HSP_DBZL_BAS b
				   WHERE a.emg_no = b.reg_seq
					 and b.PAT_TYP = '1') c,
		          (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     rownum - 1),
		                          'YYYY/MM') yarmon
		             from dual
		           connect by rownum <![CDATA[ <= ]]>
		                      months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		    where c.crtyarmon(+) = d.yarmon
		    group by d.yarmon
		    order by d.yarmon
	</select>
	
	<select id="getRxccublReport" parameterType="activetech.edpc.pojo.dto.ReportCondition"  
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		   select d.yarmon,
		          count(c.reg_seq) patNumb,
		          sum(case when c.rxccu = '1' then 1 else 0 end) tnumb
		     from ( select b.reg_seq,
			               to_char(b.reg_tim, 'YYYY/MM') crtyarmon,
			               (select pro_val
			                  from hsp_zl_inf
			                 where emg_no = a.emg_no
			                   and pro_code = 'RXCCU') rxccu
			          from (
			                select emg_no
			                  from hsp_zl_inf
			                 where pro_code = 'CBZD'
			                   and pro_val = '1'
			                   and exists (select 1
			                          from hsp_zl_inf
			                         where emg_no = hsp_zl_inf.emg_no
			                           and pro_code = 'ZGZCS'
			                           and pro_val = '1')
			                ) a,
			               hsp_dbzl_bas b
			         where a.emg_no = b.reg_seq
			           and b.pat_typ = '1'
		              ) c,
		          (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     rownum - 1),
		                          'YYYY/MM') yarmon
		             from dual
		           connect by rownum <![CDATA[ <= ]]>
		                      months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		    where c.crtyarmon(+) = d.yarmon
		    group by d.yarmon
		    order by d.yarmon
	</select>
	
	<select id="getRxjzkccublReport" parameterType="activetech.edpc.pojo.dto.ReportCondition"  
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		    select d.yarmon,
			       count(c.reg_seq) patNumb,
			       sum(case when c.pcisswcsj is not null then 1 else 0 end) tnumb
			  from (select b.reg_seq,
						   to_char(b.reg_tim, 'YYYY/MM') crtyarmon,
						   (select pro_val
							from hsp_zl_inf
							where emg_no = a.emg_no
							  and pro_code = 'PCISSWCSJ') pcisswcsj
					from (select emg_no
						  from hsp_zl_inf
						  where pro_code = 'CBZD'
							and pro_val = '1'
							and exists (select 1
										from hsp_zl_inf
										where emg_no = hsp_zl_inf.emg_no
										  and pro_code = 'ZGZCS'
										  and pro_val = '1')) a,
						 hsp_dbzl_bas b
					where a.emg_no = b.reg_seq
					  and b.pat_typ = '1'
					  and exists (select 1
								  from hsp_zl_inf
								  where emg_no = b.reg_seq
									and pro_code = 'DYFS'
									and pro_val in ('1', '2'))
			           ) c, 
		          (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     rownum - 1),
		                          'YYYY/MM') yarmon
		             from dual
		           connect by rownum <![CDATA[ <= ]]>
		                      months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		    where c.crtyarmon(+) = d.yarmon
		    group by d.yarmon
		    order by d.yarmon
	</select>
	
	<select id="getYccsxdtblReport" parameterType="activetech.edpc.pojo.dto.ReportCondition"  
		resultType="activetech.edpc.pojo.dto.ReportDataResult" >
		select d.yarmon, count(c.reg_seq) patNumb, sum(nvl(c.ycxdtcs, 0)) tnumb
		  from (select b.reg_seq,
					   to_char(b.reg_tim, 'YYYY/MM') crtyarmon,
					   (select 1
						from hsp_zl_inf
						where emg_no = a.emg_no
						  and pro_code = 'YCXDTCS'
						  and pro_val = '1') ycxdtcs
				from (select emg_no
					  from hsp_zl_inf
					  where pro_code = 'CBZD'
						and pro_val = '1') a,
					 hsp_dbzl_bas b
				where a.emg_no = b.reg_seq
				  and b.pat_typ = '1'
				  and exists (select 1
							  from hsp_zl_inf
							  where emg_no = b.reg_seq
								and pro_code = 'DYFS'
								and pro_val in ('1', '2'))) c,
		       (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     rownum - 1),
		                          'YYYY/MM') yarmon
		             from dual
		           connect by rownum <![CDATA[ <= ]]>
		                      months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		 where c.crtyarmon(+) = d.yarmon
		 group by d.yarmon
		 order by d.yarmon
	</select>
	
	<select id="getStemi2HdyljcReport" parameterType="activetech.edpc.pojo.dto.ReportCondition"  
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		select d.yarmon,
			   count(c.reg_seq)    patNumb,
			   sum(case
					   when c.fbsj is null then 0
					   when nvl(round(round((c.scyljc - c.fbsj) * 24 * 60, 2)), 0) <![CDATA[ < ]]> 0 then
						   0
					   when nvl(round(round((c.scyljc - c.fbsj) * 24 * 60, 2)), 0)<![CDATA[ <= ]]> 180 then
						   1
					   else 0 end) tnumb
		from (select b.reg_seq,
					 to_char(b.REG_TIM, 'YYYY/MM') crtyarmon,
					 cast(c.scyljc as date)        scyljc,
					 (select to_date(pro_val, 'yyyy-mm-dd hh24:mi:ss') fbsj
					  FROM HSP_zl_INF
					  WHERE emg_no = a.emg_no
						and pro_code = 'FBSJ')     fbsj
			  FROM (select emg_no
					FROM hsp_zl_inf
					WHERE pro_code = 'CBZD'
					  and pro_val = '1') a,
				   HSP_DBZL_BAS b,
				   (
					   select to_date(pro_val, 'yyyy-mm-dd hh24:mi:ss') scyljc, emg_no
					   FROM hsp_zl_inf
					   WHERE pro_code = 'SCYLJCSJ'
				   ) c
			  WHERE a.emg_no = b.reg_seq
				and c.EMG_NO = b.reg_seq
				and b.PAT_TYP = '1') c,
			 (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
										rownum - 1),
							 'YYYY/MM') yarmon
			  from dual connect by rownum <![CDATA[ <= ]]>
		                      months_between(to_date(#{endDate,jdbcType = VARCHAR}
				 , 'YYYY/MM')
				 , to_date(#{startDate,jdbcType = VARCHAR}
				 , 'YYYY/MM')) + 1) d
		where c.crtyarmon(+) = d.yarmon
		group by d.yarmon
		order by d.yarmon
	</select>
	
	<select id="getRshzyblReport"  parameterType="activetech.edpc.pojo.dto.ReportCondition"  
		resultType="activetech.edpc.pojo.dto.ReportDataResult" >
			select d.yarmon,
			       count(c.reg_seq) patNumb,
			       sum(case
			             when (zykssj - rssj) <![CDATA[ < ]]> 1 then
			              1
			             else
			              0
			           end) tnumb
			  from (select b.reg_seq,
						   to_char(b.reg_tim, 'YYYY/MM') crtyarmon,
						   (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
							from hsp_zl_inf
							where emg_no = b.reg_seq
							  and pro_code = 'YNKSRSSJ') rssj,
						   (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
							from hsp_zl_inf
							where emg_no = b.reg_seq
							  and pro_code = 'ZYKSSJ') zykssj
					from hsp_dbzl_bas b
					where b.pat_typ = '1'
					  and exists (select 1
								  from hsp_zl_inf
								  where emg_no = b.reg_seq
									and pro_code = 'YNKSRSSJ')) c,
			        (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     rownum - 1),
		                          'YYYY/MM') yarmon
		             from dual
		           connect by rownum <![CDATA[ <= ]]>
		                      months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
			 where c.crtyarmon(+) = d.yarmon
			 group by d.yarmon
			 order by d.yarmon
	</select>
	
	<select id="getZgzblReport"  parameterType="activetech.edpc.pojo.dto.ReportCondition"  
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		with temp as (
			select b.reg_seq,
				   to_char(b.REG_TIM, 'YYYY/MM') crtyarmon,
				   (select to_date(pro_val, 'yyyy-mm-dd hh24:mi:ss')
					FROM HSP_zl_INF
					WHERE emg_no = b.reg_seq
					  and pro_code = 'FBSJ')     fbsj,
				   (select PRO_VAL
					from HSP_zl_INF
					where EMG_NO = b.reg_seq
					  and PRO_CODE = 'ZGZCS')    zgzcs,
				   (select PRO_VAL
					from HSP_zl_INF
					where EMG_NO = b.reg_seq
					  and PRO_CODE = 'YNRSSC')   rnrssc,
				   (select to_date(pro_val, 'yyyy-mm-dd hh24:mi:ss')
					from HSP_zl_INF
					where EMG_NO = b.reg_seq
					  and PRO_CODE = 'YNKSRSSJ') rnksrssj,
				   (select to_date(pro_val, 'yyyy-mm-dd hh24:mi:ss')
					from HSP_zl_INF
					where EMG_NO = b.reg_seq
					  and PRO_CODE = 'KSCCSJ')   ksccsj,
				   (select PRO_VAL
					FROM hsp_zl_inf
					WHERE emg_no = b.reg_seq
					  and pro_code = 'YWZGZCS')  ywzgzcs
			FROM HSP_DBZL_BAS b
			WHERE b.PAT_TYP = '1'
			  and exists(select 1
						 FROM hsp_zl_inf
						 WHERE pro_code = 'CBZD'
						   and pro_val = '1'
						   and emg_no = b.reg_seq)
		)
		select d.yarmon, count(reg_seq) patNumb, sum(nvl(c.fhtj, 0)) tnumb
		from (
				 select reg_seq,
						fbsj,
						zgzsj,
						crtyarmon,
						(case
							 when ywzgzcs = '1' and zgzsj - fbsj <![CDATA[ < ]]>  0.5 then
								 1
							 else 0
							end) fhtj
				 from (select reg_seq,
							  crtyarmon,
							  fbsj,
							  (case
								   when zgzcs = '1' then
									   ksccsj
								   when zgzcs = '2' and rnrssc = '1' then
									   rnksrssj
								  end)
								  zgzsj,
							  ywzgzcs
					   from temp
					  )
				 where case when ywzgzcs = '1' and zgzsj is null then 0 else 1 end = 1
			 ) c,
			 (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
										rownum - 1),
							 'YYYY/MM') yarmon
			  from dual connect by rownum <![CDATA[ <= ]]>
		                      months_between(to_date(#{endDate,jdbcType = VARCHAR}
				 , 'YYYY/MM')
				 , to_date(#{startDate,jdbcType = VARCHAR}
				 , 'YYYY/MM')) + 1) d
		where c.crtyarmon(+) = d.yarmon
		group by d.yarmon
		order by d.yarmon
	</select>
	
	<select id="getS2fmcReport" parameterType="activetech.edpc.pojo.dto.ReportCondition"  
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		select d.yarmon,
		       count(c.reg_seq) patNumb,
		       nvl(round(sum(c.flowtime1 - c.flowtime2) * 24 * 60 /
		                 count(c.reg_seq),
		                 2),
		           0) avgtime,
		       nvl(round(median((c.flowtime1 - c.flowtime2) * 24 * 60), 2), 0) mediantime,
		       nvl(round(max(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0) maxMin,
		       nvl(round(min(c.flowtime1 - c.flowtime2) * 24 * 60, 2), 0) minMin
		  from (select b.reg_seq,
					   to_char(b.reg_tim, 'YYYY/MM') crtyarmon,
					   (select to_date(pro_val,'yyyy-MM-dd hh24:mi')
						from hsp_zl_inf
						where pro_code = 'FBSJ'
						and emg_no = a.emg_no) flowtime2,
					   (select to_date(pro_val,'yyyy-MM-dd hh24:mi')
						from hsp_zl_inf
						where pro_code = 'SCYLJCSJ'
						and emg_no = a.emg_no) flowtime1
				from (select emg_no
					  from hsp_zl_inf
					  where pro_code = 'CBZD'
						and pro_val = '1') a,
					 hsp_dbzl_bas b
				where a.emg_no = b.reg_seq
				  and b.pat_typ = '1') c,
		       (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'), rownum - 1),
		                       'YYYY/MM') yarmon
		          from dual
		        connect by rownum <![CDATA[ <= ]]>
		                   months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                  to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		 where c.crtyarmon(+) = d.yarmon
		 group by d.yarmon
		 order by d.yarmon
	</select>
	
	<select id="getBlsltjData" resultType="activetech.edpc.pojo.dto.HomePageResult">
		select (select count(*)
				from hsp_dbzl_bas
				where pat_typ = '1'
				  and reg_tim >= (select trunc(sysdate) from dual))
				   as thisDay,
			   (select count(*)
				from hsp_dbzl_bas
				where pat_typ = '1'
				  and reg_tim >= (select trunc(sysdate, 'd') from dual))
				   as thisWeek,
			   (select count(*)
				from hsp_dbzl_bas
				where pat_typ = '1'
				  and reg_tim >= (select trunc(sysdate, 'mm') from dual))
				   as thisMonth,
			   (select count(*)
				from hsp_dbzl_bas
				where pat_typ = '1'
				  and reg_tim >= (select trunc(sysdate, 'yyyy') from dual))
				   as thisYear
		from dual

	</select>
	
	<select id="getBllstjData" resultType="activetech.edpc.pojo.dto.HomePageResult">
		select '2' as way_typ, count(*) as total
		from hsp_dbzl_bas
		where pat_typ = '1'
		union
		select '0', count(*)
		from hsp_dbzl_bas
		where pat_typ = '1'
		  and way_typ = '0'
		union
		select '1', count(*)
		from hsp_dbzl_bas
		where pat_typ = '1'
		  and way_typ = '1'
		union
		select '3', count(*)
		from hsp_dbzl_bas a, hsp_zl_inf b
		where a.reg_seq = b.emg_no(+)
		  and b.pro_code = 'DYFS'
		  and b.pro_val = '3'
		  and a.pat_typ = '1'
	</select>
	
	<select id="getLyfstjData" resultType="activetech.edpc.pojo.dto.HomePageResult">
		select pro_val as infocode, info, count(*) as total
		from (select b.pro_val, c.info, a.reg_seq
			  from hsp_dbzl_bas a, hsp_zl_inf b, dstdictinfo c
			  where a.reg_seq = b.emg_no(+)
				and b.pro_val = c.infocode(+)
				and b.pro_code = 'DYFS'
				and a.pat_typ = '1'
				and c.typecode = 'XT_DDFS_COD')
		group by pro_val, info
	</select>
	
	<select id="getZgqktjData" resultType="activetech.edpc.pojo.dto.HomePageResult">
		select b.infocode, info, nvl(total, 0) total
		FROM (select PRO_VAL, count(*) total
			  from HSP_zl_INF a,
				   HSP_DBZL_BAS b
			  where a.EMG_NO = b.reg_seq
				and b.PAT_TYP = '1'
				and a.PRO_CODE = 'HZZG'
			  group by a.PRO_VAL
			 ) a,
			 dstdictinfo b
		WHERE b.typecode = 'XT_HZZG_COD'
		  AND a.PRO_VAL(+) = b.infocode
		  and b.ISENABLE = '1'
	</select>
	
	<select id="getGjzkData" parameterType="activetech.edpc.pojo.dto.ReportCondition" 
		resultType="activetech.edpc.pojo.dto.ReportDataResult" >
		select d.yarmon,
		       count(c.emg_seq) patNumb,
		       nvl(round(sum(c.endtime - c.emg_dat)*24*60 / count(c.emg_seq),2),0) avgtime
		  from (select b.emg_seq,
		  
		               to_char(b.emg_dat, 'YYYY/MM') crtyarmon,
		               
		               (select to_date(to_char(emg_dat,'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS') from hsp_emg_inf where emg_seq = a.emg_no) emg_dat,
		               
		               (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
		                  from hsp_zl_inf
		                 where emg_no = a.emg_no
		                   and pro_code = #{endProCode,jdbcType = VARCHAR} ) endtime
		          from (select emg_no
		                  from hsp_zl_inf
		                 where pro_code in #{endProCode,jdbcType = VARCHAR}
		                   and pro_val is not null
		                ) a,
		               hsp_emg_inf b
		         where a.emg_no = b.emg_seq
		           and b.xtlcflg = '1') c,
		       (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR},'YYYY/MM'),
		                                  rownum - 1),
		                       'YYYY/MM') yarmon
		          from dual
		        connect by rownum <![CDATA[ <= ]]> months_between(
		        								to_date(#{endDate,jdbcType = VARCHAR},'YYYY/MM'),
		                                        to_date(#{startDate,jdbcType = VARCHAR},'YYYY/MM')) + 1) d
		 where c.crtyarmon(+) = d.yarmon
		 group by d.yarmon
		 order by d.yarmon		
	</select>
	
	<select id="getDgsjhData" parameterType="activetech.edpc.pojo.dto.ReportCondition" 
		resultType="activetech.edpc.pojo.dto.ReportDataResult" >
		select d.yarmon,
		       count(c.emg_seq) patNumb,
		       nvl(round(sum(c.endtime - c.starttime)*24*60 / count(c.emg_seq),2),0) avgtime
		  from (select b.emg_seq,
		  
		               to_char(b.emg_dat, 'YYYY/MM') crtyarmon,
		               
		               (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
		                  from hsp_zl_inf
		                 where emg_no = a.emg_no
		                   and pro_code = #{startProCode,jdbcType = VARCHAR} ) starttime,
		               (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
		                  from hsp_zl_inf
		                 where emg_no = a.emg_no
		                   and pro_code = #{endProCode,jdbcType = VARCHAR} ) endtime
		          from (select emg_no
		                  from hsp_zl_inf
		                 where pro_code in #{endProCode,jdbcType = VARCHAR}
		                   and pro_val is not null
		                ) a,
		               hsp_emg_inf b
		         where a.emg_no = b.emg_seq
		           and b.xtlcflg = '1') c,
		       (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR},'YYYY/MM'),
		                                  rownum - 1),
		                       'YYYY/MM') yarmon
		          from dual
		        connect by rownum <![CDATA[ <= ]]> months_between(
		        								to_date(#{endDate,jdbcType = VARCHAR},'YYYY/MM'),
		                                        to_date(#{startDate,jdbcType = VARCHAR},'YYYY/MM')) + 1) d
		 where c.crtyarmon(+) = d.yarmon
		 group by d.yarmon
		 order by d.yarmon		
	</select>
	
	<select id="getXdtqzData" parameterType="activetech.edpc.pojo.dto.ReportCondition" 
		resultType="activetech.edpc.pojo.dto.ReportDataResult" >
		select d.yarmon,
		       count(c.emg_seq) patNumb,
		       nvl(round(sum(c.xdtqz_time - c.xdtwc_time)*24*60 / count(c.emg_seq),2),0) avgtime
		  from (select b.emg_seq,
		  
		               to_char(b.emg_dat, 'YYYY/MM') crtyarmon,
		               
		               (select to_date(to_char(min(file_date),'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS') file_date
                      from hsp_ecg_inf
                     where ref_id = a.emg_no
                       and ecg_type = '11' ) xdtwc_time,
                       
		               (select to_date(to_char(min(file_dia_date),'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS') file_dia_date
                      from hsp_ecg_inf
                     where ref_id = a.emg_no
                       and ecg_type = '11' ) xdtqz_time
                       
		          from (select distinct ref_id as emg_no
		                  from hsp_ecg_inf
		                 where ecg_type = '11'
		                   and file_date is not null
		                   and file_dia_date is not null
		                ) a,
		               hsp_emg_inf b
		         where a.emg_no = b.emg_seq
		           and b.xtlcflg = '1') c,
		       (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR},'YYYY/MM'),
		                                  rownum - 1),
		                       'YYYY/MM') yarmon
		          from dual
		        connect by rownum <![CDATA[ <= ]]> months_between(
		        								to_date(#{endDate,jdbcType = VARCHAR},'YYYY/MM'),
		                                        to_date(#{startDate,jdbcType = VARCHAR},'YYYY/MM')) + 1) d
		 where c.crtyarmon(+) = d.yarmon
		 group by d.yarmon
		 order by d.yarmon		
	</select>
	
	
	<select id="getWlyyData" resultType="activetech.edpc.pojo.dto.HomePageResult">
		select YYMC as infocode,
			   (select info
				from dstdictinfo
				where typecode = 'XT_WLYY_COD'
				  and infocode = b.YYMC) info,
			   count(*) as total
		from (select a.*,
					 (select pro_val
					  from hsp_zl_inf
					  where pro_code = 'DYFS'
						and emg_no = a.reg_seq) as DYFS,
					 (select pro_val
					  from hsp_zl_inf
					  where pro_code = 'ZYLX'
						and emg_no = a.reg_seq) as ZYLX,
					 (select pro_val
					  from hsp_zl_inf
					  where pro_code = 'YYMC'
						and emg_no = a.reg_seq) as YYMC
			  from hsp_dbzl_bas a
			  where pat_typ = '1') b
		where DYFS = '2'
		  and ZYLX = '1'
		group by YYMC
	</select>
	
	<select id="getLyfstCz" parameterType="activetech.edpc.pojo.dto.ReportCondition" 
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
			select count(*) patNumb,
			       (select info
			          from dstdictinfo
			         where typecode = 'ARV_CHL_COD'
			           and infocode = arv_chl_cod) info
			  from hsp_emg_inf
			 where czlcflg = '1'
			   and emg_dat <![CDATA[ <= ]]> to_date(#{endDate,jdbcType = VARCHAR},'yyyy-mm-dd')+1
			   and emg_dat <![CDATA[ > ]]> to_date(#{startDate,jdbcType = VARCHAR},'yyyy-mm-dd')
			 group by arv_chl_cod
	</select>
	
	
	<select id="getZgqkCz" parameterType="activetech.edpc.pojo.dto.ReportCondition" 
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
			with temp as
			 (select sqlinf.emg_seq, sql_sta_cod
			    from hsp_sql_inf sqlinf, hsp_emg_inf emginf
			   where sqlinf.sql_seq = emginf.sql_seq
			     and emginf.czlcflg = '1'
			     and emg_dat <![CDATA[ <= ]]> to_date(#{endDate, jdbcType = VARCHAR}, 'yyyy-mm-dd') + 1
			     and emg_dat <![CDATA[ > ]]> to_date(#{startDate, jdbcType = VARCHAR}, 'yyyy-mm-dd'))
			select count(*) patNumb,
			       (select info
			          from dstdictinfo
			         where typecode = 'CST_DSP_COD'
			           and infocode = temp.sql_sta_cod) info
			  from temp
			 group by temp.sql_sta_cod
	</select>
	
	<select id="getZdtjCz" parameterType="activetech.edpc.pojo.dto.ReportCondition" 
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
			with temp as
			 (select zl.emg_no, zl.pro_val
			    from hsp_zl_inf zl, hsp_emg_inf emg
			   where zl.emg_no = emg.emg_seq
			     and emg.czlcflg = '1'
			     and zl.pro_code = 'CBZD'
			     and emg_dat <![CDATA[ <= ]]> to_date(#{endDate, jdbcType = VARCHAR}, 'yyyy-mm-dd') + 1
			     and emg_dat <![CDATA[ > ]]> to_date(#{startDate, jdbcType = VARCHAR}, 'yyyy-mm-dd'))
			select count(*) patNumb,
			       (select info
			          from dstdictinfo
			         where typecode = 'CZ_CBZD_COD'
			           AND infocode = temp.pro_val) info
			  from temp
			 group by pro_val
	</select>
	
	<select id="getCzhzqst" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
		 (select t.seq_no,
		         t.emg_no,
		         t.pro_code,
		         t.pro_val,
		         t.crt_time,
		         t.crt_user,
		         t.mod_time,
		         t.mod_user
		    from hsp_zl_inf t
		   where t.pro_code = 'CBZD')
		select m.month yarmon,
		       d.infocode,
		       d.info,
		       (select count(1)
		          from temp
		         where temp.pro_val = d.infocode
		           and to_char(temp.crt_time, 'yyyy/mm') = m.month) total
		  from dstdictinfo d,
		       (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
		                       'yyyy/mm') as month
		          from dual
		        connect by rownum <=
		                   months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-mm'),
		                                  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		 where d.typecode = 'CZ_CBZD_COD'
		   and d.isenable = '1'
		 order by m.month, d.dictsort nulls last
		]]>
	</select>
	
	<select id="getCzgjzkqst" parameterType="activetech.edpc.pojo.dto.ReportCondition"
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
	select d.yarmon,
           count(c.emg_seq) patNumb,
           nvl(round(sum(c.endtime - c.emg_dat)*24*60 / count(c.emg_seq),2),0) avgtime
      from (select b.emg_seq,
      
                   to_char(b.emg_dat, 'YYYY/MM') crtyarmon,
                   
                   (select emg_dat+0 from hsp_emg_inf where emg_seq = a.emg_no) emg_dat,
                   
                   (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
                      from hsp_zl_inf
                     where emg_no = a.emg_no
                       and pro_code = #{endProCode,jdbcType = VARCHAR} ) endtime
              from (select emg_no
                      from hsp_zl_inf
                     where pro_code in #{endProCode,jdbcType = VARCHAR}
                       and pro_val is not null
                    ) a,
                   hsp_emg_inf b
             where a.emg_no = b.emg_seq
               and b.czlcflg = '1') c,
           (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR},'yyyy-mm'),
                                      rownum - 1),
                           'YYYY/MM') yarmon
              from dual
            connect by rownum <![CDATA[ <= ]]> months_between(
                            to_date(#{endDate,jdbcType = VARCHAR},'yyyy-mm'),
                                            to_date(#{startDate,jdbcType = VARCHAR},'yyyy-mm')) + 1) d
     where c.crtyarmon(+) = d.yarmon
     group by d.yarmon
     order by d.yarmon  
	</select>
	
	<select id="get6RSbRReport" parameterType="activetech.edpc.pojo.dto.ReportCondition"  
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		   select d.yarmon,
		          count(c.reg_seq) patNumb,
		          sum(case
		                when c.fbsj is null then
		                 0
		                when nvl(round((to_date(c.rszlkssj, 'yyyy-MM-dd hh24:mi') - to_date(c.fbsj, 'yyyy-MM-dd hh24:mi')) * 24 * 60, 2), 0) <![CDATA[ >= ]]> 360 then
		                 1
		                else
		                 0
		              end) tnumb
		     from (select b.reg_seq,
						  to_char(b.reg_tim, 'YYYY/MM') crtyarmon,
						  (select pro_val
						   from hsp_zl_inf
						   where pro_code = 'RSZLKSSJ'
							 and emg_no = b.reg_seq) rszlkssj,
						  (select pro_val
						   from hsp_zl_inf
						   where pro_code = 'FBSJ'
							 and emg_no = b.reg_seq) fbsj
				   from (select emg_no
						 from hsp_zl_inf
						 where pro_code = 'ISRS'
						   and pro_val = '0') a,
						hsp_dbzl_bas b
				   where a.emg_no = b.reg_seq
					 and b.pat_typ = '2') c,
		          (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     rownum - 1),
		                          'YYYY/MM') yarmon
		             from dual
		           connect by rownum <![CDATA[ <= ]]>
		                      months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		    where c.crtyarmon(+) = d.yarmon
		    group by d.yarmon
		    order by d.yarmon
	</select>
	
	<select id="getStemi12HdyljcReport" parameterType="activetech.edpc.pojo.dto.ReportCondition"  
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		   select d.yarmon,
       				count(c.reg_seq) patNumb,
       				sum(case
             			when c.fbsj is null then
              			0
             			when nvl(round((to_date(c.emg_dat, 'yyyy-MM-dd hh24:mi') - to_date(c.fbsj, 'yyyy-MM-dd hh24:mi')) * 24 * 60, 2),0) <![CDATA[ <= ]]> 720 then
              			1
             			else
              			0
           			end) tnumb
		     from (select a.reg_seq,
						  to_char(a.reg_tim, 'YYYY/MM') crtyarmon,
						  (select pro_val
						   from hsp_zl_inf
						   where pro_code = 'SCYLJCSJ'
							 and emg_no = a.reg_seq) emg_dat,
						  (select pro_val
						   from hsp_zl_inf
						   where pro_code = 'FBSJ'
							 and emg_no = a.reg_seq) fbsj
				   from hsp_dbzl_bas a,
						(select emg_no
						 from hsp_zl_inf
						 where pro_code = 'CBZD'
						   and pro_val = '1') b
				   where a.reg_seq = b.emg_no
					 and a.pat_typ = '1') c,
		          (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     rownum - 1),
		                          'YYYY/MM') yarmon
		             from dual
		           connect by rownum <![CDATA[ <= ]]>
		                      months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		    where c.crtyarmon(+) = d.yarmon
		    group by d.yarmon
		    order by d.yarmon
	</select>
	
	<select id="getXjgs12HnbrReport" parameterType="activetech.edpc.pojo.dto.ReportCondition"  
		resultType="activetech.edpc.pojo.dto.ReportDataResult">
		   select d.yarmon,
		          count(c.emg_seq) patNumb,
		          sum(case
		                when c.fbsj is null then
		                 0
		                when nvl(round(( c.emg_dat - c.fbsj) * 24 * 60, 2), 0) <![CDATA[ >= ]]> 720 then
		                 1
		                else
		                 0
		              end) tnumb
		     from (select b.emg_seq,
		                  to_char(b.emg_dat, 'YYYY/MM') crtyarmon,
		                  cast(b.emg_dat as date) emg_dat,
		                  (select cast(ill_tim as date) fbsj
		                     from aid_patient
		                    where patid = (select patid
		                                     from hsp_emg_inf
		                                    where emg_seq = a.emg_no)) fbsj
							 from (select emg_no
							        from hsp_zl_inf) a,
							         hsp_emg_inf b
							         where b.jbzd_des = '急性心肌梗死'
							           and b.xtlcflg = '1') c,
		          (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     rownum - 1),
		                          'YYYY/MM') yarmon
		             from dual
		           connect by rownum <![CDATA[ <= ]]>
		                      months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
		                                     to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
		    where c.crtyarmon(+) = d.yarmon
		    group by d.yarmon
		    order by d.yarmon
	</select>
	
	<select id="getStemiRSorJRReport" parameterType="activetech.edpc.pojo.dto.ReportCondition"
			resultType="activetech.edpc.pojo.dto.ReportDataResult">
				select d.yarmon,
		    count(c.emg_seq) patNumb,
		    sum(
		    case
		    when(c.fbsj is null) then
		    0
		    when(c.ksccsj is null) then
		        case
		        when(c.ynksrssj is not null) and round((c.ynksrssj - c.fbsj) * 24 * 60, 2)  <![CDATA[ > ]]>   12 * 60 then
		        1
		        else 0
		        end
		    when(c.ksccsj is not null) then
		        case
		        when(c.ynksrssj is not null) then
		             case
		              when((c.ksccsj-c.ynksrssj)  <![CDATA[ > ]]>  0) and round((c.ynksrssj - c.fbsj) * 24 * 60, 2)  <![CDATA[ > ]]>   12 * 60 then
		              1
		              when((c.ksccsj-c.ynksrssj)  <![CDATA[ < ]]>  0) and round((c.ksccsj - c.fbsj) * 24 * 60, 2)  <![CDATA[ > ]]>   12 * 60 then
		              1
		              else 0
		              end
		        when(c.ynksrssj is null) and round((c.ksccsj - c.fbsj) * 24 * 60, 2)  <![CDATA[ > ]]>   12 * 60 then
		        1
		        else 0
		        end
		    else 0
		    end) tnumb
		    from (select b.emg_seq,
		    to_char(b.emg_dat, 'YYYY/MM') crtyarmon,
		    (select cast(ill_tim as date) fbsj
		    from aid_patient
		    where patid = (select patid
		    from hsp_emg_inf
		    where emg_seq = a.emg_no)) fbsj,
		    (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
		    from hsp_zl_inf
		    where emg_no = a.emg_no
		    and pro_code = 'YNKSRSSJ') ynksrssj,
		    (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
		    from hsp_zl_inf
		    where emg_no = a.emg_no
		    and pro_code = 'KSCCSJ') ksccsj
		    from (select emg_no
		            from hsp_zl_inf
		           where pro_code = 'CBZD'
		             and pro_val = '1') a,
		         hsp_emg_inf b
		     where a.emg_no = b.emg_seq
		       and b.xtlcflg = '1') c,
				(select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
				rownum - 1),
				'YYYY/MM') yarmon
				from dual
				connect by rownum <![CDATA[ <= ]]>
				months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
				to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
				where c.crtyarmon(+) = d.yarmon
				group by d.yarmon
				order by d.yarmon
	</select>
	
	<select id="getStemiRsAvgReport" parameterType="activetech.edpc.pojo.dto.ReportCondition"
			resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
				select d.yarmon,
              count(c.emg_seq) patNumb,
                  nvl(round(sum(c.ynksrssj - c.emg_dat) * 24 * 60 /
		                 count(c.emg_seq),
		                 2),
		           0) avgtime
         from (select b.emg_seq,
                      to_char(b.emg_dat, 'YYYY/MM') crtyarmon,
                      cast(b.emg_dat as date) emg_dat,
              (select to_date(pro_val, 'YYYY-MM-DD HH24:MI:SS')
		                  from hsp_zl_inf
                      where emg_no = a.emg_no
                      and pro_code = 'YNKSRSSJ') ynksrssj
                 from (select emg_no
                         from hsp_zl_inf
                        where pro_code = 'CBZD'
                          and pro_val = '1') a,
                      hsp_emg_inf b
                where a.emg_no = b.emg_seq
                  and b.xtlcflg = '1') c,
              (select to_char(add_months(to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM'),
                                         rownum - 1),
                              'YYYY/MM') yarmon
                 from dual
               connect by rownum <= 
                          months_between(to_date(#{endDate,jdbcType = VARCHAR}, 'YYYY/MM'),
                                         to_date(#{startDate,jdbcType = VARCHAR}, 'YYYY/MM')) + 1) d
        where c.crtyarmon(+) = d.yarmon
        group by d.yarmon
        order by d.yarmon
        ]]>
	</select>

	<select id="getPreHospitalFirstAidTransferTime" resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
				 (select emg.emg_seq,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'DYSJ'
							and emg_no = emg.emg_seq) dysj,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'LCSJ'
							and emg_no = emg.emg_seq) lcsj,
						 to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				  from hsp_emg_inf emg
				  where cspg_flg = '1')

		select m.month yarmon, avg(temp.dysj - temp.lcsj)*24*60 avgtime
		from temp,
			 (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		where m.month = temp.emg_dat(+)
		group by m.month
		order by m.month
		]]>
	</select>
	<select id="getPatientPreparationTime" resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
				 (select emg.emg_seq,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'DDJZKSJ'
							and emg_no = emg.emg_seq) DDJZKSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'JZSJ'
							and emg_no = emg.emg_seq) JZSJ,
						 to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				  from hsp_emg_inf emg, hsp_iss_inf iss
				  where cspg_flg = '1'
					and emg.emg_seq = iss.emg_seq(+)
					and (iss.iss_sco >= '16' or iss.iss_tjb_cod >= '3' or
						 iss.iss_mb_cod >= '3' or iss.iss_xb_cod >= '3' or
						 iss.iss_fb_cod >= '3' or iss.iss_sz_cod >= '3' or
						 iss.iss_tb_cod >= '3'))
		select m.month yarmon, avg(temp.JZSJ - temp.DDJZKSJ)*24*60 avgtime
		from temp,
			 (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		where m.month = temp.emg_dat(+)
		group by m.month
		order by m.month
		]]>
	</select>
	<select id="getCsFastCtTime" resultType="activetech.edpc.pojo.dto.ReportDataResult">
 <![CDATA[
		with temp as
				 (select emg.emg_seq,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'DDJZKSJ'
							and emg_no = emg.emg_seq) DDJZKSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'QSKSCTWCSJ'
							and emg_no = emg.emg_seq) QSKSCTWCSJ,
						 to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				  from hsp_emg_inf emg, hsp_iss_inf iss
				  where cspg_flg = '1'
					and emg.emg_seq = iss.emg_seq(+)
					and (iss.iss_sco >= '16' or iss.iss_tjb_cod >= '3' or
						 iss.iss_mb_cod >= '3' or iss.iss_xb_cod >= '3' or
						 iss.iss_fb_cod >= '3' or iss.iss_sz_cod >= '3' or
						 iss.iss_tb_cod >= '3'))
		select m.month yarmon, avg(temp.QSKSCTWCSJ - temp.DDJZKSJ)*24*60 avgtime
		from temp,
			 (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		where m.month = temp.emg_dat(+)
		group by m.month
		order by m.month
		]]>
	</select>
	<select id="getCsCompleteFullBodyChestXray" resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
				 (select emg.emg_seq,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'DDJZKSJ'
							and emg_no = emg.emg_seq) DDJZKSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'XPXPWCSJ'
							and emg_no = emg.emg_seq) XPXPWCSJ,
						 to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				  from hsp_emg_inf emg, hsp_iss_inf iss
				  where cspg_flg = '1'
					and emg.emg_seq = iss.emg_seq(+)
					and (iss.iss_sco >= '16' or iss.iss_tjb_cod >= '3' or
						 iss.iss_mb_cod >= '3' or iss.iss_xb_cod >= '3' or
						 iss.iss_fb_cod >= '3' or iss.iss_sz_cod >= '3' or
						 iss.iss_tb_cod >= '3'))
		select m.month yarmon, avg(temp.XPXPWCSJ - temp.DDJZKSJ)*24*60 avgtime
		from temp,
			 (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		where m.month = temp.emg_dat(+)
		group by m.month
		order by m.month
		]]>
	</select>
	<select id="getPenguXrayTime" resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
				 (select emg.emg_seq,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'DDJZKSJ'
							and emg_no = emg.emg_seq) DDJZKSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'GPXPWCSJ'
							and emg_no = emg.emg_seq) GPXPWCSJ,
						 to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				  from hsp_emg_inf emg, hsp_iss_inf iss
				  where cspg_flg = '1'
					and emg.emg_seq = iss.emg_seq(+)
					and (iss.iss_sco >= '16' or iss.iss_tjb_cod >= '3' or
						 iss.iss_mb_cod >= '3' or iss.iss_xb_cod >= '3' or
						 iss.iss_fb_cod >= '3' or iss.iss_sz_cod >= '3' or
						 iss.iss_tb_cod >= '3'))
		select m.month yarmon, avg(temp.GPXPWCSJ - temp.DDJZKSJ)*24*60 avgtime
		from temp,
			 (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		where m.month = temp.emg_dat(+)
		group by m.month
		order by m.month
		]]>
	</select>
	<select id="getCsFastJcTime" resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
				 (select emg.emg_seq,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'DDJZKSJ'
							and emg_no = emg.emg_seq) DDJZKSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'FASTWCSJ'
							and emg_no = emg.emg_seq) FASTWCSJ,
						 to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				  from hsp_emg_inf emg, hsp_iss_inf iss
				  where cspg_flg = '1'
					and emg.emg_seq = iss.emg_seq(+)
					and (iss.iss_sco >= '16' or iss.iss_tjb_cod >= '3' or
						 iss.iss_mb_cod >= '3' or iss.iss_xb_cod >= '3' or
						 iss.iss_fb_cod >= '3' or iss.iss_sz_cod >= '3' or
						 iss.iss_tb_cod >= '3'))
		select m.month yarmon, avg(temp.FASTWCSJ - temp.DDJZKSJ)*24*60 avgtime
		from temp,
			 (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		where m.month = temp.emg_dat(+)
		group by m.month
		order by m.month
		]]>
	</select>
	<select id="getCsShuXueTime" resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
				 (select emg.emg_seq,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'SQSXSJ'
							and emg_no = emg.emg_seq) SQSXSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'ZXSXSJ'
							and emg_no = emg.emg_seq) ZXSXSJ,
						 to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				  from hsp_emg_inf emg, hsp_iss_inf iss
				  where cspg_flg = '1'
					and emg.emg_seq = iss.emg_seq(+)
					and (iss.iss_sco >= '16' or iss.iss_tjb_cod >= '3' or
						 iss.iss_mb_cod >= '3' or iss.iss_xb_cod >= '3' or
						 iss.iss_fb_cod >= '3' or iss.iss_sz_cod >= '3' or
						 iss.iss_tb_cod >= '3'))
		select m.month yarmon, avg(temp.ZXSXSJ - temp.SQSXSJ)*24*60 avgtime
		from temp,
			 (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		where m.month = temp.emg_dat(+)
		group by m.month
		order by m.month
		]]>
	</select>
	<select id="getCsRenGongqdTime" resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
				 (select emg.emg_seq,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'TCJLSJ'
							and emg_no = emg.emg_seq) TCJLSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'CGJLSJ'
							and emg_no = emg.emg_seq) CGJLSJ,
						 to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				  from hsp_emg_inf emg, hsp_iss_inf iss
				  where cspg_flg = '1'
					and emg.emg_seq = iss.emg_seq(+)
					and (iss.iss_sco >= '16' or iss.iss_tjb_cod >= '3' or
						 iss.iss_mb_cod >= '3' or iss.iss_xb_cod >= '3' or
						 iss.iss_fb_cod >= '3' or iss.iss_sz_cod >= '3' or
						 iss.iss_tb_cod >= '3'))
		select m.month yarmon, avg(temp.CGJLSJ - temp.TCJLSJ)*24*60 avgtime
		from temp,
			 (select to_char(add_months(to_date(#{startDate,jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate,jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		where m.month = temp.emg_dat(+)
		group by m.month
		order by m.month
		]]>
	</select>
	<select id="getCsJingJissTime" resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
				 (select emg.emg_seq,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'TCSSYZSJ'
							and emg_no = emg.emg_seq) TCSSYZSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'KSSSJ'
							and emg_no = emg.emg_seq) KSSSJ,
						 to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				  from hsp_emg_inf emg, hsp_iss_inf iss
				  where cspg_flg = '1'
					and emg.emg_seq = iss.emg_seq(+)
					and (iss.iss_sco >= '16' or iss.iss_tjb_cod >= '3' or
						 iss.iss_mb_cod >= '3' or iss.iss_xb_cod >= '3' or
						 iss.iss_fb_cod >= '3' or iss.iss_sz_cod >= '3' or
						 iss.iss_tb_cod >= '3'))
		select m.month yarmon, avg(temp.KSSSJ - temp.TCSSYZSJ)*24*60 avgtime
		from temp,
			 (select to_char(add_months(to_date(#{startDate,jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate,jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		where m.month = temp.emg_dat(+)
		group by m.month
		order by m.month
		]]>
	</select>
	<select id="getCsMjzTingliuTime" resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
				 (select emg.emg_seq,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'TCSSYZSJ'
							and emg_no = emg.emg_seq) TCSSYZSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'SWSJ'
							and emg_no = emg.emg_seq) SWSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'JZLYSJ'
							and emg_no = emg.emg_seq) JZLYSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'BLZYSJ'
							and emg_no = emg.emg_seq) BLZYSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'DDICUSJ'
							and emg_no = emg.emg_seq) DDICUSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'JJSJ'
							and emg_no = emg.emg_seq) JJSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'LGSJ'
							and emg_no = emg.emg_seq) LGSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'ZGSJ'
							and emg_no = emg.emg_seq) ZGSJ,
						 to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				  from hsp_emg_inf emg, hsp_iss_inf iss
				  where cspg_flg = '1'
					and (iss.iss_sco >= '16' or iss.iss_tjb_cod >= '3' or
						 iss.iss_mb_cod >= '3' or iss.iss_xb_cod >= '3' or
						 iss.iss_fb_cod >= '3' or iss.iss_sz_cod >= '3' or
						 iss.iss_tb_cod >= '3'))
		select m.month yarmon,
			   avg(nvl2(temp.SWSJ,
						(least(temp.SWSJ,
							   temp.JZLYSJ,
							   temp.BLZYSJ,
							   temp.DDICUSJ,
							   temp.JJSJ,
							   temp.LGSJ,
							   temp.ZGSJ)),
						null) - temp.TCSSYZSJ) * 24 * 60 avgtime
		from temp,
			 (select to_char(add_months(to_date(#{startDate,jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate,jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		where m.month = temp.emg_dat(+)
		group by m.month
		order by m.month
		]]>
	</select>
	<select id="getCsyzZuhyTime" resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
				 (select emg.emg_seq,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'BLZYSJ'
							and emg_no = emg.emg_seq) BLZYSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'JSZYSJ'
							and emg_no = emg.emg_seq) JSZYSJ,
						 to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				  from hsp_emg_inf emg, hsp_iss_inf iss
				  where cspg_flg = '1'
					and emg.emg_seq = iss.emg_seq(+)
					and (iss.iss_sco >= '16' or iss.iss_tjb_cod >= '3' or
						 iss.iss_mb_cod >= '3' or iss.iss_xb_cod >= '3' or
						 iss.iss_fb_cod >= '3' or iss.iss_sz_cod >= '3' or
						 iss.iss_tb_cod >= '3'))
		select m.month yarmon, avg(temp.JSZYSJ - temp.BLZYSJ) avgtime
		from temp,
			 (select to_char(add_months(to_date(#{startDate,jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate,jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		where m.month = temp.emg_dat(+)
		group by m.month
		order by m.month
		]]>
	</select>
	<select id="getCsyzICUTime" resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
				 (select emg.emg_seq,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'DDICUSJ'
							and emg_no = emg.emg_seq) DDICUSJ,
						 (select pro_val
						  from hsp_zl_inf
						  where pro_code = 'LKICUSJ'
							and emg_no = emg.emg_seq) LKICUSJ,
						 to_char(emg.emg_dat, 'yyyy/mm') emg_dat
				  from hsp_emg_inf emg, hsp_iss_inf iss
				  where cspg_flg = '1'
					and (iss.iss_sco >= '16' or iss.iss_tjb_cod >= '3' or
						 iss.iss_mb_cod >= '3' or iss.iss_xb_cod >= '3' or
						 iss.iss_fb_cod >= '3' or iss.iss_sz_cod >= '3' or
						 iss.iss_tb_cod >= '3'))
		select m.month yarmon, avg(temp.LKICUSJ - temp.DDICUSJ) avgtime
		from temp,
			 (select to_char(add_months(to_date(#{startDate,jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate,jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		where m.month = temp.emg_dat(+)
		group by m.month
		order by m.month
		]]>
	</select>
	<select id="getCsPatientNum" resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		with temp as
				 (select sum(case
								 when emg.cspg_flg = '1' then
									 1
								 else
									 0
					 end) total,
						 emgdat
				  from (select emg_seq, cspg_flg, to_char(emg_dat, 'yyyy/mm') emgdat
						from hsp_emg_inf) emg,
					   hsp_iss_inf iss
				  where emg.emg_seq = iss.emg_seq(+)
					and not exists (select *
									from hsp_zl_inf
									where pro_code = 'ISDYYSW'
									  and pro_val = '1'
									  and emg_no = emg.emg_seq)
				  group by emgdat)
		select m.month yarmon, nvl(temp.total, 0) total
		from temp,
			 (select to_char(add_months(to_date(#{startDate,jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate,jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		where m.month = temp.emgdat(+)
		order by m.month
		]]>
	</select>
	<select id="getCsjztlMedianDate" parameterType="activetech.edpc.pojo.dto.ReportCondition"
			resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		select round(median(min), 2) median, mdate yarmon
		from (select (to_date(to_char(to_timestamp(sql_dat), 'yyyy-mm-dd hh24:mi'),
							  'yyyy-mm-dd hh24:mi') -
					  to_date(to_char(to_timestamp(emg_dat), 'yyyy-mm-dd hh24:mi'),
							  'YYYY-MM-DD HH24:mi')) * 1440 min,
		               sql_dat,
		               emg_dat,
		               cst_dsp_cod,
		               sql_sta_cod
			  from hsp_emg_inf a, hsp_sql_inf b
			  where a.sql_seq = b.sql_seq
				and a.cst_dsp_cod in ('6', '10')
				and b.sql_sta_cod <> '3'
				and a.cspg_flg = '1'
				and a.emg_seq in (select emg_seq
				  from hsp_sql_inf
				  group by emg_seq
				  having count(emg_seq) > 1)),
			 (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy/mm'), rownum - 1),
							 'yyyy/mm') mdate
			  from dual
				  connect by rownum <=
		                   months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy/mm'),
				  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy/mm')) + 1) mon
		where mon.mdate = to_char(emg_dat(+), 'yyyy/mm')
		group by mdate
		order by mdate asc
		]]>
	</select>
	<select id="getCsjzsxMedianDate" parameterType="activetech.edpc.pojo.dto.ReportCondition"
			resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		select round(median(min), 2) median, mdate yarmon
		from (select (to_date(to_char(to_timestamp(CRT_DAT), 'yyyy-mm-dd hh24:mi'),
							  'yyyy-mm-dd hh24:mi') -
					  to_date(to_char(to_timestamp(CRTDATE), 'yyyy-mm-dd hh24:mi'),
							  'YYYY-MM-DD HH24:mi')) * 1440 min,
		               CRT_DAT,
		               CRTDATE
			  from HSP_CONSENT_INF a, hsp_hljld_inf b
			  where a.REFSEQNO = b.emg_seq
				and a.TEMPNO = '1044'
				and b.jchl = '293'
				and a.REFSEQNO in (select emg_seq
				  from hsp_hljld_inf
				  group by emg_seq
				  having count(emg_seq) > 1)),
			 (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy/mm'), rownum - 1),
							 'yyyy/mm') mdate
			  from dual
				  connect by rownum <=
		                   months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy/mm'),
				  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy/mm')) + 1) mon
		where mon.mdate = to_char(CRTDATE(+), 'yyyy/mm')
		group by mdate
		order by mdate asc
		]]>
	</select>
	<select id="getCsyzbrMedianDate" parameterType="activetech.edpc.pojo.dto.ReportCondition"
			resultType="activetech.edpc.pojo.dto.ReportDataResult">
		<![CDATA[
		select m.month yarmon,
			   (select count(1)
				FROM hsp_emg_inf emg, hsp_iss_inf iss
				WHERE emg.emg_seq = iss.emg_seq
				  and emg.cspg_flg = '1'
				  and (iss.iss_sco >= '16' or iss.iss_tjb_cod >= '3' or
					   iss.iss_mb_cod >= '3' or iss.iss_xb_cod >= '3' or
					   iss.iss_fb_cod >= '3' or iss.iss_sz_cod >= '3' or
					   iss.iss_tb_cod >= '3')
				  and to_char(emg.emg_dat, 'yyyy/mm') = m.month) total
		FROM (select to_char(add_months(to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm'), rownum - 1),
							 'yyyy/MM') as month
			  FROM dual
			  connect by rownum <=
				  months_between(to_date(#{endDate, jdbcType=VARCHAR}, 'yyyy-mm'),
				  to_date(#{startDate, jdbcType=VARCHAR}, 'yyyy-mm')) + 1) m
		order by m.month nulls last
		]]>
	</select>

</mapper>