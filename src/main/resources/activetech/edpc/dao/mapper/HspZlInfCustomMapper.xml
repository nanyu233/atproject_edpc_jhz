<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="activetech.edpc.dao.mapper.HspZlInfCustomMapper">
  <resultMap id="BaseResultMap" type="activetech.edpc.pojo.dto.HspZlInfCustom">
    <id column="SEQ_NO" property="seqNo" jdbcType="VARCHAR"/>
    <result column="EMG_NO" property="emgNo" jdbcType="VARCHAR"/>
    <result column="PRO_CODE" property="proCode" jdbcType="VARCHAR"/>
    <result column="PRO_VAL" property="proVal" jdbcType="VARCHAR"/>
    <result column="CRT_TIME" property="crtTime" jdbcType="TIMESTAMP"/>
    <result column="CRT_USER" property="crtUser" jdbcType="VARCHAR"/>
    <result column="MOD_TIME" property="modTime" jdbcType="TIMESTAMP"/>
    <result column="MOD_USER" property="modUser" jdbcType="VARCHAR"/>
  </resultMap>
  
  
  <resultMap id="hspemginfCustomxt" type="activetech.edpc.pojo.dto.HspZlInfCustom">
  	<result column="emg_no" property="emgNo" jdbcType="VARCHAR"/>
  	<result column="pro_code" property="proCode" jdbcType="VARCHAR"/>
  	<result column="pro_val" property="proVal" jdbcType="VARCHAR"/>
  	<result column="pro_name" property="proName" jdbcType="VARCHAR"/>
  	<result column="pro_type" property="proType" jdbcType="VARCHAR"/>
  	<result column="pro_list" property="proList" jdbcType="VARCHAR"/>
  	<collection property="hspCrivelInf" ofType="activetech.edpc.pojo.domain.HspCrivelInf">
  		<result column="vel_seq" property="velSeq" jdbcType="VARCHAR"/>
  		<result column="emg_seq" property="emgSeq" jdbcType="VARCHAR"/>
  		<result column="xzcd" property="xzcd" jdbcType="VARCHAR"/>
  		<result column="zystimixl" property="zystimixl" jdbcType="VARCHAR"/>
  		<result column="zjnxs" property="zjnxs" jdbcType="VARCHAR"/>
  		<result column="sffcbb" property="sffcbb" jdbcType="VARCHAR"/>
  		<result column="sfcto" property="sfcto" jdbcType="VARCHAR"/>
  		<result column="ghbb" property="ghbb" jdbcType="VARCHAR"/>
  		<result column="zfbb" property="zfbb" jdbcType="VARCHAR"/>
  		<result column="pci" property="pci" jdbcType="VARCHAR"/>
	    <result column="SZCL" property="szcl" jdbcType="VARCHAR"/>
	    <result column="DSTGSJ" property="dstgsj" jdbcType="TIMESTAMP"/>
	    <result column="SHTIMIXL" property="shtimixl" jdbcType="VARCHAR"/>
	    <result column="ZRZJGS" property="zrzjgs" jdbcType="VARCHAR"/>
	    <result column="ZJZL" property="zjzl" jdbcType="VARCHAR"/>
  	</collection>
  </resultMap>
  
  <update id="mergeHspXtzlInf" parameterType="activetech.edpc.pojo.dto.HspZlInfCustom">
		merge into hsp_zl_inf a
            using (select #{emgNo, jdbcType = VARCHAR}   emg_no,
                          #{proCode, jdbcType = VARCHAR} pro_code,
                          #{proVal, jdbcType = VARCHAR}  pro_val
                   from dual) b
            on (a.emg_no = b.emg_no and a.pro_code = b.pro_code)
            when matched then
                update
                    set a.pro_val = b.pro_val,
                        a.mod_user = #{modUser, jdbcType = VARCHAR},
                        a.mod_time = sysdate
            when not matched then
                insert
                    (SEQ_NO,
                     EMG_NO,
                     PRO_CODE,
                     PRO_VAL,
                     CRT_TIME,
                     CRT_USER,
                     MOD_TIME,
                     MOD_USER)
                    values (HSPZLINF_SEQ.nextval,
                            b.emg_no,
                            b.pro_code,
                            b.pro_val,
                            sysdate,
                            #{crtUser, jdbcType = VARCHAR},
                            sysdate,
                            #{crtUser, jdbcType = VARCHAR})

  </update>
  
  <select id="getHspXtzlInfByEmgSeqAndStep" parameterType="java.lang.String"
          resultType="activetech.edpc.pojo.dto.HspZlInfCustom">
		select a.pro_name, a.pro_type, a.pro_code, b.pro_val, a.pro_list, a.pro_unit
        from (select pro_name, pro_type, pro_code, pro_list, pro_unit
              from hsp_zl_def
              where node_id = #{nodeId, jdbcType = VARCHAR}
              order by fld_sort) a,
             (select pro_code, pro_val from hsp_zl_inf where emg_no = #{emgSeq, jdbcType = VARCHAR}) b
        where a.pro_code = b.pro_code
  </select>
  
  <select id="getHspXtzlInfByEmgSeqAndProCodeList"
          resultType="activetech.edpc.pojo.domain.HspZlInf">
  		select a.seq_no,
		       a.emg_no,
		       a.pro_code,
		       a.pro_val,
		       a.crt_time,
		       a.crt_user,
		       a.mod_time,
		       a.mod_user
		  from hsp_zl_inf a
		 where emg_no = #{regSeq, jdbcType = VARCHAR}
		   and pro_code in
		       <foreach item="item" index="index" collection="list"
                        open="(" separator="," close=")">
                   #{item}
               </foreach>
  </select>

    <!-- 胸痛急救时间轴 -->
    <select id="getCpcTimeline" parameterType="java.lang.String" resultType="activetech.edpc.pojo.dto.HspZlInfCustom">
	select inf.seq_no,
           inf.emg_no,
           inf.pro_code,
           inf.pro_val,
           def.pro_type,
           def.pro_name,
           def.key_time
    from hsp_zl_inf inf,
         hsp_zl_def def
    where inf.pro_code = def.pro_code
      and inf.emg_no = #{emgSeq, jdbcType = VARCHAR}
      and def.pro_type = 'datetime'
      and inf.pro_val is not null
      and substr(def.key_time, 1, 1) in ('1', '2')
    order by inf.pro_val asc, def.fld_sort asc
  </select>
  
  <select id="findXtPatientWithCod" resultMap="hspemginfCustomxt">
		select a.emg_no,
		       a.pro_code,
		       a.pro_val,
		       b.pro_name,
		       b.pro_type,
		       b.pro_list,
		       c.vel_seq,
		       c.emg_seq,
		       c.xzcd,
		       c.zystimixl,
		       c.zjnxs,
		       c.sffcbb,
		       c.sfcto,
		       c.ghbb,
		       c.zfbb,
		       c.pci,
		       c.szcl,
		       c.dstgsj,
		       c.shtimixl,
		       c.zrzjgs,
		       c.zjzl
		  from hsp_zl_inf a, hsp_zl_def b, hsp_crivel_inf c
		 where a.pro_code = b.pro_code(+)
		   and a.pro_val = c.vel_seq(+)
		   and b.bus_step in
	   <foreach item="item" index="index" collection="busSteps"
                open="(" separator="," close=")">
           	#{item}
       </foreach>
	   and a.emg_no = #{emgNo, jdbcType = VARCHAR}
       order by a.crt_time desc
  </select>
  
  <sql id="zl_where">
  	<if test="cstNam!=null and cstNam!=''">
	   and a.cst_nam like '%'||#{cstNam,jdbcType=VARCHAR}||'%'
	 </if>
	 <if test="endDate!=null and endDate!=''">
	   and a.emg_dat <![CDATA[<]]> #{endDate,jdbcType=TIMESTAMP}
	 </if>
	 <if test="startDate!=null and startDate!=''">
	   and a.emg_dat <![CDATA[>=]]> #{startDate,jdbcType=TIMESTAMP}
	 </if>
	 <if test="dyfs!=null and dyfs!=''">
	   and exists (select *
          from hsp_zl_inf
         where hsp_zl_inf.emg_no = a.emg_seq
           and hsp_zl_inf.pro_code = 'DYFS'
           and hsp_zl_inf.pro_val = #{dyfs,jdbcType=VARCHAR})
	 </if>
	 <if test="cbzd!=null and cbzd!=''">
	   and exists (select *
          from hsp_zl_inf
         where hsp_zl_inf.emg_no = a.emg_seq
           and hsp_zl_inf.pro_code = 'CBZD'
           and hsp_zl_inf.pro_val = #{cbzd,jdbcType=VARCHAR})
	 </if>
	 <if test="ccdw!=null and ccdw!=''">
	   and exists (select *
          from hsp_zl_inf
         where hsp_zl_inf.emg_no = a.emg_seq
           and hsp_zl_inf.pro_code = 'CCDW'
           and hsp_zl_inf.pro_val = #{ccdw,jdbcType=VARCHAR})
	 </if>
	 <if test="yqrszl!=null and yqrszl!=''">
	   and exists (select *
          from hsp_zl_inf
         where hsp_zl_inf.emg_no = a.emg_seq
           and hsp_zl_inf.pro_code = 'YQRSZL'
           and hsp_zl_inf.pro_val = #{yqrszl,jdbcType=VARCHAR})
	 </if>
	 <if test="yqrscs!=null and yqrscs!=''">
	   and exists (select *
          from hsp_zl_inf
         where hsp_zl_inf.emg_no = a.emg_seq
           and hsp_zl_inf.pro_code = 'YQRSCS'
           and hsp_zl_inf.pro_val = #{yqrscs,jdbcType=VARCHAR})
	 </if>
  </sql>
  <sql id="zl_whereTwo">
  	<if test="cstNam!=null and cstNam!=''">
	   and b.cst_Nam like '%'||#{cstNam,jdbcType=VARCHAR}||'%'
	 </if>
	 <if test="endDate!=null and endDate!=''">
	   and b.crt_tim <![CDATA[<]]> #{endDate,jdbcType=TIMESTAMP}
	 </if>
	 <if test="startDate!=null and startDate!=''">
	   and b.crt_tim <![CDATA[>=]]> #{startDate,jdbcType=TIMESTAMP}
	 </if>
	 <if test="dyfs!=null and dyfs!=''">
	   and exists (select *
          from hsp_zl_inf
         where hsp_zl_inf.emg_no = b.xt_seq
           and hsp_zl_inf.pro_code = 'DYFS'
           and hsp_zl_inf.pro_val = #{dyfs,jdbcType=VARCHAR})
	 </if>
	 <if test="cbzd!=null and cbzd!=''">
	   and exists (select *
          from hsp_zl_inf
         where hsp_zl_inf.emg_no = b.xt_seq
           and hsp_zl_inf.pro_code = 'CBZD'
           and hsp_zl_inf.pro_val = #{cbzd,jdbcType=VARCHAR})
	 </if>
	 <if test="ccdw!=null and ccdw!=''">
	   and exists (select *
          from hsp_zl_inf
         where hsp_zl_inf.emg_no = b.xt_seq
           and hsp_zl_inf.pro_code = 'CCDW'
           and hsp_zl_inf.pro_val = #{ccdw,jdbcType=VARCHAR})
	 </if>
	 <if test="yqrszl!=null and yqrszl!=''">
	   and exists (select *
          from hsp_zl_inf
         where hsp_zl_inf.emg_no = b.xt_seq
           and hsp_zl_inf.pro_code = 'YQRSZL'
           and hsp_zl_inf.pro_val = #{yqrszl,jdbcType=VARCHAR})
	 </if>
	 <if test="yqrscs!=null and yqrscs!=''">
	   and exists (select *
          from hsp_zl_inf
         where hsp_zl_inf.emg_no = b.xt_seq
           and hsp_zl_inf.pro_code = 'YQRSCS'
           and hsp_zl_inf.pro_val = #{yqrscs,jdbcType=VARCHAR})
	 </if>
  </sql>

  <select id="getD2W" parameterType="java.lang.String"
          resultType="java.lang.String">
	select CEIL((min(dstgsj) + 0 -
                 (select to_date(pro_val, 'yyyy-mm-dd hh24:mi:ss')
                  from hsp_zl_inf
                  where pro_code = 'DDYYDMSJ'
                    and emg_no = #{emgSeq,jdbcType=VARCHAR})) * 24 * 60)
    from hsp_crivel_inf
    where emg_seq = #{emgSeq,jdbcType=VARCHAR}
    group by emg_seq
  </select>

	<select id="getXtPatientDetail2" parameterType="java.lang.String"
            resultType="activetech.hospital.pojo.domain.HspEmgInf">
		select xt_seq,
               vst_cad,
               cst_nam,
               cst_sex_cod,
               id_nbr,
               cst_age,
               bth_dat,
               phe_nbr
        from hsp_xt_add
        where xt_seq = #{emgSeq, jdbcType = VARCHAR}
	</select>
	
	<select id="getHspXtzlInfByEmgSeq" parameterType="java.lang.String"
            resultType="activetech.edpc.pojo.dto.HspZlInfCustom">
		select a.seq_no,
               a.emg_no,
               a.pro_code,
               a.pro_val,
               b.pro_type,
               b.pro_name,
               b.pro_unit,
               b.pro_list,
               b.pro_memo,
               b.fld_desc
        from hsp_zl_inf a,
             hsp_zl_def b
        where a.pro_code = b.pro_code
          and a.emg_no = #{emgSeq, jdbcType = VARCHAR}
          and a.pro_val is not null
	</select>
    <select id="countCsPatientList" parameterType="activetech.edpc.pojo.dto.HspZlInfQueryDto"
            resultType="java.lang.Integer">
        select count(*)
        from hsp_dbzl_bas
        where PAT_TYP = '3'
        <if test="cstNam !=null and cstNam.length()>0">
            and cst_nam = #{cstNam, jdbcType = VARCHAR}
        </if>
        <if test="vstCad !=null and vstCad.length()>0">
            and vst_cad = #{vstCad, jdbcType = VARCHAR}
        </if>
        and reg_tim <![CDATA[>]]> #{startdate, jdbcType = TIMESTAMP}
        and reg_tim <![CDATA[<]]> #{enddate, jdbcType = TIMESTAMP} +1
    </select>

    <select id="getCsPatientList" parameterType="activetech.edpc.pojo.dto.HspZlInfQueryDto"
            resultType="activetech.edpc.pojo.dto.HspDbzlBasCustom">
        <include refid="activetech.base.CommonSql.page_start" />
        select reg_seq,
        reg_tim,
        emg_seq,
        mpi,
        pat_typ,
        way_typ,
        card_type,
        vst_cad,
        cst_nam,
        cst_sex_cod,
        id_type,
        id_nbr,
        cst_age_cod,
        decode(cst_age_cod, '0', cst_age, '0') cstAge,
        pat_wgt,
        pat_hgt,
        bth_dat,
        phe_nbr,
        cst_adr,
        nation,
        emg_job,
        marital_status,
        cst_edu,
        lnk_man,
        lnk_way,
        grn_chl,
        sw_chl,
        hsp_ara,
        yqxh,
        jzxh,
        zyxh,
        doc_dat,
        jzys,
        ysxm,
        ksdm,
        crt_tim,
        crt_no,
        crt_nam,
        mod_tim,
        mod_no,
        mod_nam,
        nvl(rcd_sta, '1') rcd_sta,
        chk_tim,
        chk_no,
        chk_nam,
        chk_msg,
        stp_flg,
        stp_tim,
        stp_no,
        stp_nam,
        nvl(smt_sta, '1') smt_sta,
        smt_seq,
        smt_msg,
        smt_no,
        smt_nam,
        smt_tim
        from hsp_dbzl_bas
        where PAT_TYP = '3'
        <if test="cstNam !=null and cstNam.length()>0">
            and cst_nam = #{cstNam, jdbcType = VARCHAR}
        </if>
        <if test="vstCad !=null and vstCad.length()>0">
            and vst_cad = #{vstCad, jdbcType = VARCHAR}
        </if>
        and reg_tim <![CDATA[>]]> #{startdate, jdbcType = TIMESTAMP}
        and reg_tim <![CDATA[<]]> #{enddate, jdbcType = TIMESTAMP} +1
        order by reg_tim desc
        <include refid="activetech.base.CommonSql.page_end" />
    </select>

    <!-- 创伤急救时间轴 -->
    <select id="getCsTimeline" parameterType="java.lang.String"
            resultType="activetech.edpc.pojo.dto.HspZlInfCustom">
        select seq_no,
               emg_no,
               pro_code,
               pro_type,
               pro_name,
               pro_val,
               key_time
        from (select inf.seq_no,
                     inf.emg_no,
                     inf.pro_code,
                     inf.pro_val,
                     substr(inf.pro_val, 0, 16) valsort,
                     def.pro_type,
                     def.pro_name,
                     def.key_time
              from hsp_zl_inf inf, hsp_zl_def def
              where inf.pro_code = def.pro_code
                and inf.emg_no = #{regSeq, jdbcType = VARCHAR}
                and def.pro_type = 'datetime'
                and substr(def.key_time, 3, 1) in ('1', '2')
                and inf.pro_val is not null) temp
        order by temp.valsort asc
    </select>

    <select id="mergeHspCszlInf" parameterType="activetech.edpc.pojo.domain.HspZlInf">
        merge into hsp_zl_inf a
            using (select #{emgNo, jdbcType = VARCHAR} emg_no,
                          #{proCode, jdbcType = VARCHAR} pro_code,
                          #{proVal, jdbcType = VARCHAR} pro_val
                   from dual) b
            on (a.emg_no = b.emg_no and a.pro_code = b.pro_code)
            when matched then
                update
                    set a.pro_val   = b.pro_val,
                        a.mod_user  = #{modUser, jdbcType = VARCHAR},
                        a.mod_time  = sysdate
            when not matched then
                insert
                    (SEQ_NO,
                     EMG_NO,
                     PRO_CODE,
                     PRO_VAL,
                     CRT_TIME,
                     CRT_USER,
                     MOD_TIME,
                     MOD_USER)
                    values
                        (#{seqNo, jdbcType = VARCHAR},
                         b.emg_no,
                         b.pro_code,
                         b.pro_val,
                         sysdate,
                         #{crtUser, jdbcType = VARCHAR},
                         sysdate,
                         #{crtUser, jdbcType = VARCHAR})
    </select>
    <sql id="czdbzl_where">
        <if test="hspDbzlBasCustom!=null ">
            <if test="hspDbzlBasCustom.hspAra!=null and hspDbzlBasCustom.hspAra!=''.toString()">
                and a.hsp_ara =#{hspDbzlBasCustom.hspAra,jdbcType=VARCHAR}
            </if>
        </if>
        <if test="cstNam !=null and cstNam.length()>0">
            and a.cst_nam like '%'||#{cstNam, jdbcType = VARCHAR}||'%'
        </if>
        <if test="zd !=null and zd.length()>0">
            and exists (select 1
            from hsp_zl_inf
            where hsp_zl_inf.emg_no = a.REG_SEQ
            and hsp_zl_inf.pro_code = 'CBZD'
            and hsp_zl_inf.pro_val = #{zd, jdbcType = VARCHAR})
        </if>
        <if test="zdys != null and zdys.length() > 0">
            and exists (select 1
            from hsp_zl_inf
            where hsp_zl_inf.emg_no = a.REG_SEQ
            and hsp_zl_inf.pro_code = 'ZDYS'
            and hsp_zl_inf.pro_val like '%'||#{zdys, jdbcType = VARCHAR}||'%')
        </if>
        and a.crt_tim <![CDATA[>]]> #{startDate, jdbcType = TIMESTAMP}
        and a.crt_tim <![CDATA[<]]> #{endDate, jdbcType = TIMESTAMP}
    </sql>
    <sql id="czCondition">
        <if test="hspAra != null and hspAra != ''.toString()">
            and a.hsp_ara =#{hspAra,jdbcType=VARCHAR}
        </if>
        <if test="cstNam != null and cstNam.length() > 0">
            and (a.vst_cad = #{cstNam, jdbcType = VARCHAR}
            or a.cst_nam like '%'||#{cstNam, jdbcType = VARCHAR}||'%'
            )
        </if>
    </sql>
    <update id="mergeHspCzzlInf" parameterType="activetech.edpc.pojo.domain.HspZlInf">
        merge into hsp_zl_inf a
            using (select #{emgNo, jdbcType = VARCHAR} emg_no,
                          #{proCode, jdbcType = VARCHAR} pro_code,
                          #{proVal, jdbcType = VARCHAR} pro_val
                   from dual) b
            on (a.emg_no = b.emg_no and a.pro_code = b.pro_code)
            when matched then
                update
                    set a.pro_val   = b.pro_val,
                        a.mod_user  = #{modUser, jdbcType = VARCHAR},
                        a.mod_time  = sysdate
            when not matched then
                insert
                    (SEQ_NO,
                     EMG_NO,
                     PRO_CODE,
                     PRO_VAL,
                     CRT_TIME,
                     CRT_USER,
                     MOD_TIME,
                     MOD_USER)
                    values
                        (HspZlInf_SEQ.nextval,
                         b.emg_no,
                         b.pro_code,
                         b.pro_val,
                         sysdate,
                         #{crtUser, jdbcType = VARCHAR},
                         sysdate,
                         #{crtUser, jdbcType = VARCHAR})
    </update>


    <select id="getHspCzzlInfByEmgSeqAndProCodeList"
            resultType="activetech.edpc.pojo.domain.HspZlInf">
        select a.seq_no,
        a.emg_no,
        a.pro_code,
        a.pro_val,
        a.crt_time,
        a.crt_user,
        a.mod_time,
        a.mod_user
        from hsp_zl_inf a
        where emg_no = #{emgSeq, jdbcType = VARCHAR}
        and pro_code in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <select id="getHspCzzlInfByEmgSeqAndStep" parameterType="java.lang.String"
            resultType="activetech.edpc.pojo.dto.HspZlInfCustom">
        select a.pro_name, a.pro_type, a.pro_code, b.pro_val,a.pro_list,a.pro_unit
        from (select pro_name, pro_type, pro_code,pro_list,pro_unit
              from hsp_zl_def
              where node_id = #{nodeId, jdbcType = VARCHAR}
                and tit_flag = '1'
              order by fld_sort) a,
             (select pro_code, pro_val from hsp_zl_inf where emg_no = #{emgSeq, jdbcType = VARCHAR}) b
        where a.pro_code = b.pro_code(+)
    </select>


    <select id="getCzPatientInfoList" resultType="activetech.hospital.pojo.dto.HspemginfCustom"
            parameterType="activetech.edpc.pojo.dto.QueryDto">
        select a.emg_seq,
        a.emg_dat,
        a.cst_nam,
        a.cst_age,
        a.cst_sex_cod,
        a.oxy_nbr,
        b.sbpup_nbr,
        b.sbpdown_nbr,
        b.hrt_rte,
        a.id_nbr,
        a.phe_nbr,
        a.pre_dgn_cod,
        a.vst_cad,
        (select bed_num from hsp_bed_inf where emg_seq = a.emg_seq) bed_num
        from hsp_emg_inf a, hsp_mews_inf b
        where a.emg_seq = b.emg_seq(+)
        and a.czlcflg = '1'
        <if test="cstNam != null and cstNam.length() > 0">
            and (a.vst_cad = #{cstNam, jdbcType = VARCHAR}
            or a.cst_nam like '%'||#{cstNam, jdbcType = VARCHAR}||'%'
            )
        </if>
        <if test="bhls == false">
            and a.emg_dat >= sysdate - 1
        </if>
        order by emg_dat desc
    </select>


    <!-- 卒中急救时间轴 -->
    <select id="getCzTimeline" parameterType="java.lang.String" resultType="activetech.edpc.pojo.dto.HspZlInfCustom">
        select inf.seq_no,
               inf.emg_no,
               inf.pro_code,
               inf.pro_val,
               def.pro_type,
               def.pro_name,
               def.key_time
        from hsp_zl_inf inf, hsp_zl_def def
        where inf.pro_code = def.pro_code
          and inf.emg_no = #{emgSeq, jdbcType = VARCHAR}
          and def.pro_type = 'time2'
          and substr(def.key_time, 2, 1) in ('1', '2')
          and inf.pro_val is not null
        order by inf.pro_val asc, def.fld_sort asc
    </select>

    <select id="getCzPatientList" parameterType="activetech.edpc.pojo.dto.HspDbzlBasQueryDto"
            resultType="activetech.edpc.pojo.dto.HspDbzlBasCustom">
        <include refid="activetech.base.CommonSql.page_start" />
        select a.reg_seq,
        a.reg_tim,
        a.emg_seq,
        a.mpi,
        a.pat_typ,
        a.way_typ,
        a.card_type,
        a.vst_cad,
        a.cst_nam,
        a.cst_sex_cod,
        a.id_type,
        a.id_nbr,
        a.cst_age_cod,
        decode(a.cst_age_cod, '0', a.cst_age, '0') cstAge,
        a.pat_wgt,
        a.pat_hgt,
        a.bth_dat,
        a.phe_nbr,
        a.cst_adr,
        a.nation,
        a.emg_job,
        a.marital_status,
        a.cst_edu,
        a.lnk_man,
        a.lnk_way,
        a.grn_chl,
        a.sw_chl,
        a.hsp_ara,
        a.yqxh,
        a.jzxh,
        a.zyxh,
        a.doc_dat,
        a.jzys,
        a.ysxm,
        a.ksdm,
        a.crt_tim,
        a.crt_no,
        a.crt_nam,
        a.mod_tim,
        a.mod_no,
        a.mod_nam,
        nvl(a.rcd_sta, '1') rcd_sta,
        a.chk_tim,
        a.chk_no,
        a.chk_nam,
        a.chk_msg,
        a.stp_flg,
        a.stp_tim,
        a.stp_no,
        a.stp_nam,
        nvl(a.smt_sta, '1') smt_sta,
        a.smt_seq,
        a.smt_msg,
        a.smt_no,
        a.smt_nam,
        a.smt_tim,
        (select pro_val
        from hsp_zl_inf
        where hsp_zl_inf.pro_code = 'FBSJ'
        and hsp_zl_inf.emg_no = reg_seq) fbsj,
        (select pro_val
        from hsp_zl_inf
        where hsp_zl_inf.pro_code = 'CBZD'
        and hsp_zl_inf.emg_no = reg_seq) cbzd,
        (select pro_val
        from hsp_zl_inf
        where hsp_zl_inf.pro_code = 'ZDYS'
        and hsp_zl_inf.emg_no = emg_seq) zdys,
        a.way_typ wayTyp,
        a.crt_tim crtTim,
        a.smt_seq smtSeq,
        a.smt_sta smtSta
        from hsp_dbzl_bas a
        where a.PAT_TYP = '2'
        <include refid="czdbzl_where"/>
        order by a.reg_tim desc
        <include refid="activetech.base.CommonSql.page_end"/>
    </select>

    <select id="countCzPatientList" parameterType="activetech.edpc.pojo.dto.HspDbzlBasQueryDto"
            resultType="java.lang.Integer">
        select count(1)
        from hsp_dbzl_bas a
        where a.PAT_TYP = '2'
        <include refid="czdbzl_where"/>
    </select>

    <select id="getCzhcbInfoByEmgseq" parameterType="java.lang.String"
            resultType="activetech.hospital.pojo.dto.HspemginfCustom">
        select emg.emg_seq emgSeq,
               emg.cst_nam cstNam,
               (case
                    when emg.cst_age_cod = '0' then
                        emg.cst_age
                    else
                        '0'
                   end) cstAge,
               emg.emg_dat emgDat,
               hlpgb.clbz_cod,
               emg.patid,
               (select consultation_date
                from (select consultation_date,
                             invitation_date
                      from hsp_consultation_records
                      where emg_seq_cr = #{emgSeq, jdbcType = VARCHAR}
                        and invitation_dep like '%神经内科%'
                      order by invitation_date)
                where rownum = 1) consultationDate
        from hsp_emg_inf emg, hsp_hlpgb hlpgb
        where emg.emg_seq = hlpgb.emg_seq(+)
          and emg.emg_seq = #{emgSeq, jdbcType = VARCHAR}
    </select>


    <select id="getCzPatientInfoListForDbzlBas" resultType="activetech.edpc.pojo.dto.HspDbzlBasCustom"
            parameterType="activetech.edpc.pojo.dto.QueryDto">
        <include refid="activetech.base.CommonSql.page_start"/>
        select a.emg_seq,
        a.reg_seq,
        a.reg_tim,
        a.cst_nam,
        a.cst_age,
        a.cst_sex_cod,
        a.hsp_ara,
        (select pro_val FROM hsp_zl_inf WHERE emg_no = a.emg_seq and pro_code = 'XUEYANG') xueyang,
        (select pro_val FROM hsp_zl_inf WHERE emg_no = a.emg_seq and pro_code = 'XUEY') xuey,
        (select pro_val FROM hsp_zl_inf WHERE emg_no = a.emg_seq and pro_code = 'XINL') xinl,
        a.id_nbr,
        a.phe_nbr,
        (select pro_val FROM hsp_zl_inf WHERE emg_no = a.emg_seq and pro_code = 'CBYX') cbyx,
        a.vst_cad,
        (select bed_num from hsp_bed_inf where emg_seq = a.emg_seq) bed_num
        from HSP_DBZL_BAS a
        where a.pat_typ = '2'
        <if test="bhls == false">
            and a.reg_tim >= sysdate - 1
        </if>
        <include refid="czCondition"/>
        order by reg_tim desc
        <include refid="activetech.base.CommonSql.page_end"/>
    </select>

    <select id="getCzPatientInfoListCount" parameterType="activetech.edpc.pojo.dto.QueryDto"
            resultType="int">
        select count(*) from hsp_dbzl_bas a
        where a.pat_typ = '2'
        <if test="bhls == false">
            and a.crt_tim >= sysdate - 1
        </if>
        <include refid="czCondition"/>
        order by reg_tim desc nulls last
    </select>


        <select id="getCzhcbInfo" parameterType="activetech.edpc.pojo.dto.HspDbzlBasCustom"
                resultType="activetech.edpc.pojo.dto.HspDbzlBasCustom">
        select emg.reg_Seq regSeq,
               emg.cst_nam cstNam,
               (case
                    when emg.cst_age_cod = '0' then
                        emg.cst_age
                    else
                        '0'
                   end) cstAge,
               emg.reg_tim ,
               hlpgb.clbz_cod clbzCod,
               emg.reg_seq patid,
               (select consultation_date
                from (select consultation_date,
                             invitation_date
                      from hsp_consultation_records
                      where emg_seq_cr = #{regSeq, jdbcType = VARCHAR}
                        and invitation_dep like '%神经内科%'
                      order by invitation_date)
                where rownum = 1) consultationDate
        from hsp_dbzl_bas emg, hsp_hlpgb hlpgb
        where emg.reg_seq = hlpgb.emg_seq(+)
          and emg.reg_seq = #{regSeq, jdbcType = VARCHAR}
    </select>
</mapper>
