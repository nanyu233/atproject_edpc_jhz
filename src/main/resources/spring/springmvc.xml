<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">
    <mvc:default-servlet-handler />
    <!--向容器自动注入配置-->
    <context:annotation-config />
	<!-- 组件扫描 扫描所有标记@Controller类，由于使用自动扫描所以action类不用在spring配置文件中配置 -->
    <context:component-scan base-package="activetech.**.action,activetech.websocket.task,
    activetech.base.config"/>

	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>

	<!-- 定时器开关 -->
	<task:annotation-driven/>

    <!--SwaggerConfig配置类注入-->
    <bean class="activetech.base.config.SwaggerConfig"/>
	<!-- AOP -->
	<bean class="activetech.base.aop.ActiveAspect"/>
	<bean class="activetech.base.aop.DataSourceAspect"/>

    <!-- 处理器映射器和适配器，可以使用mvc注解驱动 -->
    <!-- 注解驱动 -->
    <mvc:annotation-driven conversion-service="conversionService">
		<mvc:argument-resolvers>  
	           <bean class="activetech.base.action.converters.UserArgumentResolver"/>  
	    </mvc:argument-resolvers> 
	</mvc:annotation-driven>

    <!-- websocket候诊提醒配置  -->
    <bean id="webSocketXt" class="activetech.websocket.action.WebSocketXT"/>
	<bean id="webSocketJHY" class="activetech.websocket.action.WebSocketJHY"/>
    <bean id="webSocketHz" class="activetech.websocket.action.WebSocketHz"/>
    <websocket:handlers allowed-origins="*">
    	
       <websocket:mapping path="/webSocketXt.do" handler="webSocketXt"/>
        <!-- websocket 监护仪 -->
        <websocket:mapping path="/webSocketJHY.do" handler="webSocketJHY"/>
       <websocket:mapping path="/webSocketHz.do" handler="webSocketHz"/>
       <websocket:handshake-interceptors>
            <bean class="activetech.websocket.filter.WebSocketInterceptorHz"/>
        </websocket:handshake-interceptors>
    </websocket:handlers> 
    
    
    <bean class="org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean">
        <property name="maxTextMessageBufferSize" value="8192"/>
        <property name="maxBinaryMessageBufferSize" value="8192"/>
    </bean>

    <!-- 自定义注册属性编辑器 -->
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="activetech.base.action.converters.StringTrimConverter"/>
				<bean class="activetech.base.action.converters.DateConverter"/>
				<bean class="activetech.base.action.converters.DatetimeConverter"/>
			</list>
		</property>
	</bean>

    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 将jstl的jar包加入工程，默认支持jstl -->
        <!-- 前缀和后缀可以去掉的，为了方便开发才加的 -->
        <property name="prefix" value="/WEB-INF/jsp"/>
		<property name="suffix" value=".jsp"/>
	</bean>

    <!--spring4 ajax请求传给前端对象转成json  -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
    </bean>
    <!-- json转换器 -->
    <bean id="jsonMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
     
     <bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">  
            <list>  
                <value>application/json;charset=UTF-8</value>
            </list>  
        </property>  
    </bean>

    <!-- 解决@ResponseBody返回中文乱码,解决@RequestBody接收Json字符串自动转换为实体、List、Map格式转换器 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="stringConverter"/>
                <ref bean="jsonMessageConverter"/>
            </list>  
        </property>  
    </bean>  
    
        <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="stringConverter"/>
                <ref bean="jsonMessageConverter"/>
            </list>  
        </property>  
    </bean>

    <!-- 统一异常处理类 -->
    <bean id="handlerExceptionResolver"
          class="activetech.base.process.exception.ExceptionResolverCustom">
		<!-- 注入一个json转换器 -->
        <property name="jsonMessageConverter" ref="jsonMessageConverter"/>
	</bean>
    <!-- 文件上传 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为5MB -->
        <property name="maxUploadSize">
			<value>5242880</value>
		</property>
	</bean>
    <!--  swagger web xml 里的 servlet-mapping url-pattern  必须为/ 切要交给 DispatcherServlet 处理
     为了放行静态资源，每个过滤器都必须排除 swagger 的资源和 项目静态资源 -->
    <!-- 拦截器 -->
    <mvc:interceptors>
        <!-- 多个拦截器,顺序执行 -->
        <!-- 用户身份校验的拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <!--   放行 swagger2 资源  -->
            <mvc:exclude-mapping path="/swagger-resources/**"/>
            <mvc:exclude-mapping path="/webjars/**"/>
            <mvc:exclude-mapping path="/v2/**"/>
            <mvc:exclude-mapping path="/api/**"/>
            <mvc:exclude-mapping path="/doc.html/**"/>
            <mvc:exclude-mapping path="/swagger-ui/**"/>
            <mvc:exclude-mapping path="/swagger-ui.html/**"/>
            <!--  放行项目里的静态资源     -->
            <mvc:exclude-mapping path="/ateditor/**"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/images/**"/>
            <mvc:exclude-mapping path="/js/**"/>
            <mvc:exclude-mapping path="/lib/**"/>
            <mvc:exclude-mapping path="/Lodop6.216/**"/>
            <mvc:exclude-mapping path="/template/**"/>
            <bean class="activetech.base.filter.LoginInterceptor"/>
        </mvc:interceptor>
        <!-- 用户权限拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <!--           放行 swagger2 资源  -->
            <mvc:exclude-mapping path="/swagger-resources/**"/>
            <mvc:exclude-mapping path="/webjars/**"/>
            <mvc:exclude-mapping path="/v2/**"/>
            <mvc:exclude-mapping path="/api/**"/>
            <mvc:exclude-mapping path="/doc.html/**"/>
            <mvc:exclude-mapping path="/swagger-ui/**"/>
            <mvc:exclude-mapping path="/swagger-ui.html/**"/>
            <!--  放行项目里的静态资源     -->
            <mvc:exclude-mapping path="/ateditor/**"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/images/**"/>
            <mvc:exclude-mapping path="/js/**"/>
            <mvc:exclude-mapping path="/lib/**"/>
            <mvc:exclude-mapping path="/Lodop6.216/**"/>
            <mvc:exclude-mapping path="/template/**"/>
            <bean class="activetech.base.filter.PermissionInterceptor"/>
        </mvc:interceptor>
        <!-- <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="activetech.base.filter.FormTokenInterceptor"></bean>
        </mvc:interceptor> -->
    </mvc:interceptors>
</beans>